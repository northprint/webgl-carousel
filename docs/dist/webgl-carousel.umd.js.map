{"version":3,"file":"webgl-carousel.umd.js","sources":["../src/core/EventEmitter.ts","../src/core/StateManager.ts","../src/core/ImageLoader.ts","../src/core/BaseWebGLRenderer.ts","../src/core/WebGLRenderer.ts","../src/core/WebGL2Renderer.ts","../src/core/Canvas2DFallback.ts","../src/core/EffectManager.ts","../src/effects/BaseEffect.ts","../src/effects/shaderUtils.ts","../src/effects/fade.ts","../src/effects/slide.ts","../src/effects/flip.ts","../src/effects/wave.ts","../src/effects/distortion.ts","../src/effects/dissolve.ts","../src/effects/circle.ts","../src/effects/pixelDissolve.ts","../src/effects/morph.ts","../src/effects/glitch.ts","../src/effects/CustomEffect.ts","../src/effects/index.ts","../src/core/CarouselCore.ts","../src/WebGLCarousel.ts","../src/index-umd.ts"],"sourcesContent":["export type EventHandler = (...args: unknown[]) => void;\n\nexport interface EventMap {\n  [event: string]: unknown[];\n}\n\nexport class EventEmitter<T extends EventMap = EventMap> {\n  private events: Map<keyof T, Set<EventHandler>> = new Map();\n\n  on<K extends keyof T>(event: K, handler: (...args: T[K]) => void): this {\n    if (!this.events.has(event)) {\n      this.events.set(event, new Set());\n    }\n    this.events.get(event)!.add(handler as EventHandler);\n    return this;\n  }\n\n  off<K extends keyof T>(event: K, handler: (...args: T[K]) => void): this {\n    const handlers = this.events.get(event);\n    if (handlers) {\n      handlers.delete(handler as EventHandler);\n      if (handlers.size === 0) {\n        this.events.delete(event);\n      }\n    }\n    return this;\n  }\n\n  emit<K extends keyof T>(event: K, ...args: T[K]): this {\n    const handlers = this.events.get(event);\n    if (handlers) {\n      handlers.forEach((handler) => {\n        try {\n          handler(...args);\n        } catch (error) {\n          console.error(`Error in event handler for \"${String(event)}\":`, error);\n        }\n      });\n    }\n    return this;\n  }\n\n  once<K extends keyof T>(event: K, handler: (...args: T[K]) => void): this {\n    const onceHandler = (...args: T[K]) => {\n      this.off(event, onceHandler);\n      handler(...args);\n    };\n    return this.on(event, onceHandler);\n  }\n\n  removeAllListeners(event?: keyof T): this {\n    if (event) {\n      this.events.delete(event);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n\n  listenerCount(event: keyof T): number {\n    const handlers = this.events.get(event);\n    return handlers ? handlers.size : 0;\n  }\n}\n","import { EventEmitter } from './EventEmitter';\n\nexport interface CarouselState {\n  currentIndex: number;\n  images: string[];\n  isPlaying: boolean;\n  isTransitioning: boolean;\n  effect: string;\n  transitionDuration: number;\n  autoplayInterval: number;\n  loop: boolean;\n}\n\nexport interface StateEvents extends Record<string, unknown[]> {\n  stateChange: [keyof CarouselState, unknown, unknown];\n  indexChange: [number, number];\n  playStateChange: [boolean];\n  transitionStart: [number, number];\n  transitionEnd: [number];\n}\n\nexport class StateManager extends EventEmitter<StateEvents> {\n  private state: CarouselState;\n\n  constructor(initialState: Partial<CarouselState> = {}) {\n    super();\n    this.state = {\n      currentIndex: 0,\n      images: [],\n      isPlaying: false,\n      isTransitioning: false,\n      effect: 'fade',\n      transitionDuration: 1000,\n      autoplayInterval: 3000,\n      loop: true,\n      ...initialState,\n    };\n  }\n\n  getState(): Readonly<CarouselState> {\n    return { ...this.state };\n  }\n\n  get<K extends keyof CarouselState>(key: K): CarouselState[K] {\n    return this.state[key];\n  }\n\n  set<K extends keyof CarouselState>(key: K, value: CarouselState[K]): void {\n    const oldValue = this.state[key];\n    if (oldValue !== value) {\n      this.state[key] = value;\n      this.emit('stateChange', key, oldValue, value);\n\n      // Emit specific events for certain state changes\n      if (key === 'currentIndex') {\n        this.emit('indexChange', oldValue as number, value as number);\n      } else if (key === 'isPlaying') {\n        this.emit('playStateChange', value as boolean);\n      }\n    }\n  }\n\n  update(updates: Partial<CarouselState>): void {\n    Object.entries(updates).forEach(([key, value]) => {\n      this.set(key as keyof CarouselState, value);\n    });\n  }\n\n  canGoNext(): boolean {\n    const { currentIndex, images, loop } = this.state;\n    return loop || currentIndex < images.length - 1;\n  }\n\n  canGoPrevious(): boolean {\n    const { currentIndex, loop } = this.state;\n    return loop || currentIndex > 0;\n  }\n\n  getNextIndex(): number {\n    const { currentIndex, images, loop } = this.state;\n    if (currentIndex === images.length - 1) {\n      return loop ? 0 : currentIndex;\n    }\n    return currentIndex + 1;\n  }\n\n  getPreviousIndex(): number {\n    const { currentIndex, images, loop } = this.state;\n    if (currentIndex === 0) {\n      return loop ? images.length - 1 : currentIndex;\n    }\n    return currentIndex - 1;\n  }\n\n  startTransition(toIndex: number): void {\n    if (!this.state.isTransitioning) {\n      const fromIndex = this.state.currentIndex;\n      this.set('isTransitioning', true);\n      this.emit('transitionStart', fromIndex, toIndex);\n    }\n  }\n\n  endTransition(newIndex: number): void {\n    if (this.state.isTransitioning) {\n      this.set('isTransitioning', false);\n      this.set('currentIndex', newIndex);\n      this.emit('transitionEnd', newIndex);\n    }\n  }\n\n  reset(): void {\n    this.update({\n      currentIndex: 0,\n      isPlaying: false,\n      isTransitioning: false,\n    });\n  }\n}\n","export interface LoadedImage {\n  url: string;\n  element: HTMLImageElement;\n  width: number;\n  height: number;\n  aspectRatio: number;\n}\n\nexport interface ImageLoaderOptions {\n  crossOrigin?: string;\n  timeout?: number;\n}\n\nexport class ImageLoader {\n  private cache: Map<string, LoadedImage> = new Map();\n  private loadingPromises: Map<string, Promise<LoadedImage>> = new Map();\n  private options: ImageLoaderOptions;\n\n  constructor(options: ImageLoaderOptions = {}) {\n    this.options = {\n      crossOrigin: 'anonymous',\n      timeout: 30000,\n      ...options,\n    };\n  }\n\n  async load(url: string): Promise<LoadedImage> {\n    // Check cache first\n    const cached = this.cache.get(url);\n    if (cached) {\n      return cached;\n    }\n\n    // Check if already loading\n    const loading = this.loadingPromises.get(url);\n    if (loading) {\n      return loading;\n    }\n\n    // Start new loading process\n    const loadPromise = this.loadImage(url);\n    this.loadingPromises.set(url, loadPromise);\n\n    try {\n      const loadedImage = await loadPromise;\n      this.cache.set(url, loadedImage);\n      this.loadingPromises.delete(url);\n      return loadedImage;\n    } catch (error) {\n      this.loadingPromises.delete(url);\n      throw error;\n    }\n  }\n\n  async preload(urls: string[]): Promise<LoadedImage[]> {\n    return Promise.all(urls.map((url) => this.load(url)));\n  }\n\n  async preloadWithProgress(\n    urls: string[],\n    onProgress?: (loaded: number, total: number) => void,\n  ): Promise<LoadedImage[]> {\n    const total = urls.length;\n    let loaded = 0;\n    const results: LoadedImage[] = [];\n\n    for (const url of urls) {\n      try {\n        const image = await this.load(url);\n        results.push(image);\n        loaded++;\n        onProgress?.(loaded, total);\n      } catch (error) {\n        // Create a placeholder image for failed loads\n        console.warn(`Failed to load image: ${url}`, error);\n\n        // Create a 1x1 transparent image as placeholder\n        const canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n          ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n          ctx.fillRect(0, 0, 1, 1);\n        }\n\n        // Convert canvas to image element\n        const img = new Image();\n        img.src = canvas.toDataURL();\n\n        const placeholderImage: LoadedImage = {\n          url: url,\n          element: img,\n          width: 1,\n          height: 1,\n          aspectRatio: 1,\n        };\n\n        results.push(placeholderImage);\n        loaded++;\n        onProgress?.(loaded, total);\n      }\n    }\n\n    return results;\n  }\n\n  getFromCache(url: string): LoadedImage | null {\n    return this.cache.get(url) || null;\n  }\n\n  clearCache(url?: string): void {\n    if (url) {\n      this.cache.delete(url);\n      this.loadingPromises.delete(url);\n    } else {\n      this.cache.clear();\n      this.loadingPromises.clear();\n    }\n  }\n\n  getCacheSize(): number {\n    return this.cache.size;\n  }\n\n  private loadImage(url: string): Promise<LoadedImage> {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      let timeoutId: NodeJS.Timeout | null = null;\n\n      const cleanup = () => {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        img.onload = null;\n        img.onerror = null;\n      };\n\n      const handleLoad = () => {\n        cleanup();\n        const width = img.naturalWidth || img.width;\n        const height = img.naturalHeight || img.height;\n        resolve({\n          url,\n          element: img,\n          width,\n          height,\n          aspectRatio: width / height,\n        });\n      };\n\n      const handleError = (error?: Event | string) => {\n        cleanup();\n        reject(new Error(`Failed to load image: ${url}. ${error || ''}`));\n      };\n\n      // Set timeout\n      if (this.options.timeout && this.options.timeout > 0) {\n        timeoutId = setTimeout(() => {\n          handleError('Timeout');\n        }, this.options.timeout);\n      }\n\n      // Configure image\n      // Set crossOrigin before src to ensure CORS headers are requested\n      if (this.options.crossOrigin) {\n        img.crossOrigin = this.options.crossOrigin;\n      }\n\n      img.onload = handleLoad;\n      img.onerror = handleError;\n      img.src = url;\n    });\n  }\n}\n","import { EventEmitter } from './EventEmitter';\n\nexport interface WebGLRendererEvents extends Record<string, unknown[]> {\n  contextLost: [];\n  contextRestored: [];\n  error: [Error];\n}\n\nexport abstract class BaseWebGLRenderer<\n  TContext extends WebGLRenderingContext | WebGL2RenderingContext = WebGLRenderingContext\n> extends EventEmitter<WebGLRendererEvents> {\n  protected canvas: HTMLCanvasElement | null = null;\n  protected gl: TContext | null = null;\n  protected program: WebGLProgram | null = null;\n  protected textures: Map<string, WebGLTexture> = new Map();\n  protected imageSizes: Map<string, { width: number; height: number }> = new Map();\n  protected uniforms: Map<string, WebGLUniformLocation> = new Map();\n  protected attributes: Map<string, number> = new Map();\n\n  // Abstract methods that must be implemented by subclasses\n  abstract initialize(canvas: HTMLCanvasElement): boolean;\n  abstract setEffect(effect: { vertexShader: string; fragmentShader: string }): void;\n  abstract render(\n    currentTexture: WebGLTexture | null,\n    nextTexture: WebGLTexture | null,\n    progress: number,\n    additionalUniforms?: Record<string, number | number[] | Float32Array>,\n    currentImageSrc?: string,\n    nextImageSrc?: string,\n  ): void;\n  abstract dispose(): void;\n\n  // Common texture loading logic\n  loadTexture(image: HTMLImageElement): WebGLTexture | null {\n    if (!this.gl) return null;\n\n    const srcPreview = image.src.substring(0, 50) + '...';\n    \n    // Cache image size first (before checking for existing texture)\n    if (!this.imageSizes.has(image.src)) {\n      const imageSize = {\n        width: image.naturalWidth || image.width,\n        height: image.naturalHeight || image.height,\n      };\n      this.imageSizes.set(image.src, imageSize);\n    } else {\n      const cachedSize = this.imageSizes.get(image.src);\n    }\n\n    // Check if texture already exists\n    const existingTexture = this.textures.get(image.src);\n    if (existingTexture) {\n      return existingTexture;\n    }\n\n    const texture = this.createTexture(image);\n    if (texture) {\n      // Cache texture with image src as key\n      this.textures.set(image.src, texture);\n    }\n\n    return texture;\n  }\n\n  // Template method for texture creation - can be overridden by subclasses\n  protected createTexture(image: HTMLImageElement): WebGLTexture | null {\n    if (!this.gl) return null;\n\n    const texture = this.gl.createTexture();\n    if (!texture) return null;\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA,\n      this.gl.RGBA,\n      this.gl.UNSIGNED_BYTE,\n      image,\n    );\n\n    // Set texture parameters\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n    return texture;\n  }\n\n  // Common shader compilation logic\n  protected compileShader(source: string, type: number): WebGLShader | null {\n    if (!this.gl) return null;\n\n    const shader = this.gl.createShader(type);\n    if (!shader) {\n      throw new Error('Failed to create shader');\n    }\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const error = this.gl.getShaderInfoLog(shader);\n      this.gl.deleteShader(shader);\n      throw new Error(`Failed to compile shader: ${error}`);\n    }\n\n    return shader;\n  }\n\n  // Common program creation logic\n  protected createProgram(vertexSource: string, fragmentSource: string): WebGLProgram | null {\n    if (!this.gl) return null;\n\n    const vertexShader = this.compileShader(vertexSource, this.gl.VERTEX_SHADER);\n    const fragmentShader = this.compileShader(fragmentSource, this.gl.FRAGMENT_SHADER);\n\n    if (!vertexShader || !fragmentShader) return null;\n\n    const program = this.gl.createProgram();\n    if (!program) {\n      throw new Error('Failed to create shader program');\n    }\n\n    this.gl.attachShader(program, vertexShader);\n    this.gl.attachShader(program, fragmentShader);\n    this.gl.linkProgram(program);\n\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      const error = this.gl.getProgramInfoLog(program);\n      this.gl.deleteProgram(program);\n      throw new Error(`Failed to link shader program: ${error}`);\n    }\n\n    this.gl.deleteShader(vertexShader);\n    this.gl.deleteShader(fragmentShader);\n\n    return program;\n  }\n\n  // Common uniform and attribute caching logic\n  protected cacheUniformsAndAttributes(): void {\n    if (!this.gl || !this.program) return;\n\n    this.uniforms.clear();\n    this.attributes.clear();\n\n    // Get all active uniforms dynamically from the shader program\n    const numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n\n    for (let i = 0; i < numUniforms; i++) {\n      const info = this.gl.getActiveUniform(this.program, i);\n      if (info) {\n        const location = this.gl.getUniformLocation(this.program, info.name);\n        if (location) {\n          this.uniforms.set(info.name, location);\n        }\n      }\n    }\n\n    // Get all active attributes dynamically from the shader program\n    const numAttributes = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < numAttributes; i++) {\n      const info = this.gl.getActiveAttrib(this.program, i);\n      if (info) {\n        const location = this.gl.getAttribLocation(this.program, info.name);\n        if (location >= 0) {\n          this.attributes.set(info.name, location);\n        }\n      }\n    }\n  }\n\n  // Common resize logic\n  resize(width: number, height: number): void {\n    if (!this.gl || !this.canvas) return;\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.gl.viewport(0, 0, width, height);\n  }\n\n  // Common context lost/restored handlers\n  protected handleContextLost = (event: Event): void => {\n    event.preventDefault();\n    this.emit('contextLost');\n  };\n\n  protected handleContextRestored = (): void => {\n    this.initialize(this.canvas!);\n    this.emit('contextRestored');\n  };\n\n  // Common image size uniform setting logic\n  protected setImageSizeUniforms(\n    currentImageSrc?: string,\n    nextImageSrc?: string,\n  ): void {\n    if (!this.gl || !this.canvas) return;\n\n    const imageSize0Loc = this.uniforms.get('uImageSize0');\n    const imageSize1Loc = this.uniforms.get('uImageSize1');\n\n    if (imageSize0Loc) {\n      const size = currentImageSrc ? this.imageSizes.get(currentImageSrc) : null;\n      if (size && size.width > 0 && size.height > 0) {\n        this.gl.uniform2f(imageSize0Loc, size.width, size.height);\n      } else {\n        // Default to a square aspect ratio instead of canvas size\n        const defaultSize = Math.min(this.canvas.width, this.canvas.height);\n        this.gl.uniform2f(imageSize0Loc, defaultSize, defaultSize);\n      }\n    }\n\n    if (imageSize1Loc) {\n      let size = null;\n      if (nextImageSrc) {\n        size = this.imageSizes.get(nextImageSrc);\n      } else if (currentImageSrc) {\n        // For initial render, use the same image size for both textures\n        size = this.imageSizes.get(currentImageSrc);\n      }\n      \n      if (size && size.width > 0 && size.height > 0) {\n        this.gl.uniform2f(imageSize1Loc, size.width, size.height);\n      } else {\n        // Default to a square aspect ratio instead of canvas size\n        const defaultSize = Math.min(this.canvas.width, this.canvas.height);\n        this.gl.uniform2f(imageSize1Loc, defaultSize, defaultSize);\n      }\n    }\n  }\n\n  // Common cleanup logic\n  protected disposeCommon(): void {\n    if (!this.gl) return;\n\n    // Delete textures\n    this.textures.forEach((texture) => {\n      this.gl!.deleteTexture(texture);\n    });\n    this.textures.clear();\n    this.imageSizes.clear();\n\n    // Delete program\n    if (this.program) {\n      this.gl.deleteProgram(this.program);\n      this.program = null;\n    }\n\n    // Remove event listeners\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this.handleContextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this.handleContextRestored);\n    }\n\n    this.gl = null;\n    this.canvas = null;\n    this.removeAllListeners();\n  }\n\n  isInitialized(): boolean {\n    return this.gl !== null && this.program !== null;\n  }\n\n  getContext(): TContext | null {\n    return this.gl;\n  }\n}","import { BaseWebGLRenderer } from './BaseWebGLRenderer';\n\nexport interface WebGLRendererOptions {\n  antialias?: boolean;\n  alpha?: boolean;\n  premultipliedAlpha?: boolean;\n  preserveDrawingBuffer?: boolean;\n}\n\nexport class WebGLRenderer extends BaseWebGLRenderer<WebGLRenderingContext> {\n  private vertexBuffer: WebGLBuffer | null = null;\n  private options: WebGLRendererOptions;\n\n  constructor(options: WebGLRendererOptions = {}) {\n    super();\n    this.options = {\n      antialias: true,\n      alpha: true,\n      premultipliedAlpha: true,\n      preserveDrawingBuffer: false,\n      ...options,\n    };\n  }\n\n  initialize(canvas: HTMLCanvasElement): boolean {\n    this.canvas = canvas;\n\n    try {\n      this.gl =\n        (canvas.getContext('webgl', this.options) as WebGLRenderingContext | null) ||\n        (canvas.getContext('experimental-webgl', this.options) as WebGLRenderingContext | null);\n\n      if (!this.gl) {\n        throw new Error('WebGL not supported');\n      }\n\n      this.setupEventListeners();\n      this.initializeVertexBuffer();\n      this.setDefaultEffect();\n\n      return true;\n    } catch (error) {\n      this.emit('error', error as Error);\n      return false;\n    }\n  }\n\n  private setupEventListeners(): void {\n    if (!this.canvas) return;\n\n    this.canvas.addEventListener('webglcontextlost', this.handleContextLost);\n    this.canvas.addEventListener('webglcontextrestored', this.handleContextRestored);\n  }\n\n  private initializeVertexBuffer(): void {\n    if (!this.gl) return;\n\n    // Y texture coordinates are flipped to correct for WebGL's coordinate system\n    const vertices = new Float32Array([\n      -1.0,\n      -1.0,\n      0.0,\n      1.0, // Bottom-left\n      1.0,\n      -1.0,\n      1.0,\n      1.0, // Bottom-right\n      -1.0,\n      1.0,\n      0.0,\n      0.0, // Top-left\n      1.0,\n      1.0,\n      1.0,\n      0.0, // Top-right\n    ]);\n\n    this.vertexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n  }\n\n  private setDefaultEffect(): void {\n    const vertexShader = `\n      attribute vec2 aPosition;\n      attribute vec2 aTexCoord;\n      uniform vec2 uResolution;\n      uniform vec2 uImageSize0;\n      uniform vec2 uImageSize1;\n      varying vec2 vTexCoord;\n      \n      void main() {\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n        vTexCoord = aTexCoord;\n      }\n    `;\n\n    const fragmentShader = `\n      precision mediump float;\n      \n      uniform sampler2D uTexture0;\n      uniform sampler2D uTexture1;\n      uniform float uProgress;\n      uniform vec2 uResolution;\n      uniform vec2 uImageSize0;\n      uniform vec2 uImageSize1;\n      \n      varying vec2 vTexCoord;\n      \n      // getCoverUV function for proper aspect ratio handling\n      vec2 getCoverUV(vec2 uv, vec2 imageSize, vec2 resolution) {\n        float imageAspect = imageSize.x / imageSize.y;\n        float screenAspect = resolution.x / resolution.y;\n        vec2 scale;\n        \n        if (screenAspect > imageAspect) {\n          scale = vec2(1.0, imageAspect / screenAspect);\n        } else {\n          scale = vec2(screenAspect / imageAspect, 1.0);\n        }\n        \n        return (uv - 0.5) / scale + 0.5;\n      }\n      \n      void main() {\n        vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n        vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n        \n        vec4 color0 = texture2D(uTexture0, uv0);\n        vec4 color1 = texture2D(uTexture1, uv1);\n        gl_FragColor = mix(color0, color1, uProgress);\n      }\n    `;\n\n    this.setEffect({ vertexShader, fragmentShader });\n  }\n\n  setEffect(effect: { vertexShader: string; fragmentShader: string }): void {\n    if (!this.gl) return;\n\n    try {\n      const program = super.createProgram(effect.vertexShader, effect.fragmentShader);\n      if (program) {\n        if (this.program) {\n          this.gl.deleteProgram(this.program);\n        }\n        this.program = program;\n        super.cacheUniformsAndAttributes();\n      }\n    } catch (error) {\n      this.emit('error', error as Error);\n    }\n  }\n\n\n\n\n\n  render(\n    currentTexture: WebGLTexture | null,\n    nextTexture: WebGLTexture | null,\n    progress: number,\n    additionalUniforms?: Record<string, number | number[] | Float32Array>,\n    currentImageSrc?: string,\n    nextImageSrc?: string,\n  ): void {\n    if (!this.gl || !this.program || !currentTexture) return;\n\n    this.gl.useProgram(this.program);\n\n    // Clear\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // Bind vertex buffer\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n\n    // Set attributes\n    const positionLoc = this.attributes.get('aPosition');\n    const texCoordLoc = this.attributes.get('aTexCoord');\n\n    if (positionLoc !== undefined) {\n      this.gl.enableVertexAttribArray(positionLoc);\n      this.gl.vertexAttribPointer(positionLoc, 2, this.gl.FLOAT, false, 4 * 4, 0);\n    }\n\n    if (texCoordLoc !== undefined) {\n      this.gl.enableVertexAttribArray(texCoordLoc);\n      this.gl.vertexAttribPointer(texCoordLoc, 2, this.gl.FLOAT, false, 4 * 4, 2 * 4);\n    }\n\n    // Bind textures\n    this.gl.activeTexture(this.gl.TEXTURE0);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, currentTexture);\n\n    // Bind texture1 - nextTexture if available, otherwise bind current texture\n    this.gl.activeTexture(this.gl.TEXTURE1);\n    if (nextTexture) {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, nextTexture);\n    } else {\n      // For single texture rendering, bind currentTexture to both slots\n      this.gl.bindTexture(this.gl.TEXTURE_2D, currentTexture);\n    }\n\n    // Set uniforms\n    const texture0Loc = this.uniforms.get('uTexture0');\n    const texture1Loc = this.uniforms.get('uTexture1');\n    const progressLoc = this.uniforms.get('uProgress');\n\n    if (texture0Loc) this.gl.uniform1i(texture0Loc, 0);\n    if (texture1Loc) this.gl.uniform1i(texture1Loc, 1);\n    if (progressLoc) this.gl.uniform1f(progressLoc, progress);\n\n    // Set resolution uniform if available\n    const resolutionLoc = this.uniforms.get('uResolution');\n    if (resolutionLoc && this.canvas) {\n      this.gl.uniform2f(resolutionLoc, this.canvas.width, this.canvas.height);\n    }\n\n    // Set image size uniforms\n    super.setImageSizeUniforms(currentImageSrc, nextImageSrc);\n\n    // Set additional uniforms\n    if (additionalUniforms) {\n      Object.entries(additionalUniforms).forEach(([name, value]) => {\n        const location = this.gl!.getUniformLocation(this.program!, name);\n        if (location) {\n          if (Array.isArray(value) || value instanceof Float32Array) {\n            const len = value.length;\n            switch (len) {\n              case 2:\n                this.gl!.uniform2fv(location, value as Float32Array | number[]);\n                break;\n              case 3:\n                this.gl!.uniform3fv(location, value as Float32Array | number[]);\n                break;\n              case 4:\n                this.gl!.uniform4fv(location, value as Float32Array | number[]);\n                break;\n              default:\n                if (len === 1) {\n                  this.gl!.uniform1f(location, (value as number[])[0] ?? 0);\n                }\n                break;\n            }\n          } else if (typeof value === 'number') {\n            this.gl!.uniform1f(location, value);\n          }\n        }\n      });\n    }\n\n    // Draw\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n\n  dispose(): void {\n    if (!this.gl) return;\n\n    // Delete vertex buffer\n    if (this.vertexBuffer) {\n      this.gl.deleteBuffer(this.vertexBuffer);\n      this.vertexBuffer = null;\n    }\n\n    // Call parent dispose\n    super.disposeCommon();\n  }\n\n}\n","import { BaseWebGLRenderer } from './BaseWebGLRenderer';\n\nexport interface WebGL2RendererOptions {\n  antialias?: boolean;\n  alpha?: boolean;\n  premultipliedAlpha?: boolean;\n  preserveDrawingBuffer?: boolean;\n  powerPreference?: 'default' | 'high-performance' | 'low-power';\n}\n\nexport interface MeshData {\n  vertices: Float32Array;\n  indices: Uint16Array;\n  normals?: Float32Array;\n  texCoords: Float32Array;\n  instanceData?: Float32Array;\n}\n\nexport interface TransformFeedbackData {\n  buffers: WebGLBuffer[];\n  varyings: string[];\n}\n\nexport class WebGL2Renderer extends BaseWebGLRenderer<WebGL2RenderingContext> {\n  private vertexArray: WebGLVertexArrayObject | null = null;\n  private vertexBuffer: WebGLBuffer | null = null;\n  private indexBuffer: WebGLBuffer | null = null;\n  private uniformBlockIndices: Map<string, number> = new Map();\n  private options: WebGL2RendererOptions;\n  private meshData: MeshData | null = null;\n  private transformFeedback: WebGLTransformFeedback | null = null;\n  private computeTextures: Map<string, WebGLTexture> = new Map();\n\n  constructor(options: WebGL2RendererOptions = {}) {\n    super();\n    this.options = {\n      antialias: true,\n      alpha: true,\n      premultipliedAlpha: true,\n      preserveDrawingBuffer: false,\n      powerPreference: 'high-performance',\n      ...options,\n    };\n  }\n\n  initialize(canvas: HTMLCanvasElement): boolean {\n    this.canvas = canvas;\n\n    try {\n      this.gl = canvas.getContext('webgl2', this.options) as WebGL2RenderingContext | null;\n\n      if (!this.gl) {\n        throw new Error('WebGL 2.0 not supported');\n      }\n\n      // Enable WebGL 2.0 features\n      this.gl.enable(this.gl.DEPTH_TEST);\n      this.gl.enable(this.gl.CULL_FACE);\n      this.gl.cullFace(this.gl.BACK);\n\n      this.setupEventListeners();\n      this.initializeDefaultMesh();\n      this.setDefaultEffect();\n\n      return true;\n    } catch (error) {\n      this.emit('error', error as Error);\n      return false;\n    }\n  }\n\n  private setupEventListeners(): void {\n    if (!this.canvas) return;\n\n    this.canvas.addEventListener('webglcontextlost', this.handleContextLost);\n    this.canvas.addEventListener('webglcontextrestored', this.handleContextRestored);\n  }\n\n  private initializeDefaultMesh(): void {\n    if (!this.gl) return;\n\n    // Create VAO\n    this.vertexArray = this.gl.createVertexArray();\n    this.gl.bindVertexArray(this.vertexArray);\n\n    // Default quad mesh\n    const vertices = new Float32Array([\n      -1.0,\n      -1.0,\n      0.0, // Position\n      0.0,\n      1.0, // TexCoord (flipped Y)\n      1.0,\n      -1.0,\n      0.0, // Position\n      1.0,\n      1.0, // TexCoord\n      -1.0,\n      1.0,\n      0.0, // Position\n      0.0,\n      0.0, // TexCoord\n      1.0,\n      1.0,\n      0.0, // Position\n      1.0,\n      0.0, // TexCoord\n    ]);\n\n    const indices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n\n    this.vertexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n\n    this.indexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, indices, this.gl.STATIC_DRAW);\n\n    this.meshData = {\n      vertices,\n      indices,\n      texCoords: new Float32Array([0, 1, 1, 1, 0, 0, 1, 0]),\n    };\n\n    // Don't set up vertex attributes here - wait until shader is loaded\n    // Attributes will be set up in setupMeshAttributes() after shader program is created\n\n    // Unbind VAO\n    this.gl.bindVertexArray(null);\n  }\n\n  setMesh(meshData: MeshData): void {\n    if (!this.gl) return;\n\n    this.meshData = meshData;\n\n    // Create new VAO for custom mesh\n    if (this.vertexArray) {\n      this.gl.deleteVertexArray(this.vertexArray);\n    }\n    this.vertexArray = this.gl.createVertexArray();\n    this.gl.bindVertexArray(this.vertexArray);\n\n    // Upload vertex data\n    if (this.vertexBuffer) {\n      this.gl.deleteBuffer(this.vertexBuffer);\n    }\n    this.vertexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, meshData.vertices, this.gl.DYNAMIC_DRAW);\n\n    // Upload index data\n    if (this.indexBuffer) {\n      this.gl.deleteBuffer(this.indexBuffer);\n    }\n    this.indexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, meshData.indices, this.gl.STATIC_DRAW);\n\n    // Setup attributes based on current program\n    if (this.program) {\n      this.setupMeshAttributes();\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n\n  private setupMeshAttributes(): void {\n    if (!this.gl || !this.program || !this.meshData) return;\n\n    const stride = 5 * 4; // 3 for position, 2 for texCoord\n\n    // Position attribute\n    const positionLoc = this.gl.getAttribLocation(this.program, 'aPosition');\n\n    if (positionLoc >= 0) {\n      this.gl.enableVertexAttribArray(positionLoc);\n      this.gl.vertexAttribPointer(positionLoc, 3, this.gl.FLOAT, false, stride, 0);\n    } else {\n      console.error('[WebGL2Renderer.setupMeshAttributes] aPosition not found in shader!');\n    }\n\n    // TexCoord attribute\n    const texCoordLoc = this.gl.getAttribLocation(this.program, 'aTexCoord');\n\n    if (texCoordLoc >= 0) {\n      this.gl.enableVertexAttribArray(texCoordLoc);\n      this.gl.vertexAttribPointer(texCoordLoc, 2, this.gl.FLOAT, false, stride, 3 * 4);\n    } else {\n      console.error('[WebGL2Renderer.setupMeshAttributes] aTexCoord not found in shader!');\n    }\n\n    // Instance attributes if available\n    if (this.meshData.instanceData) {\n      const instanceBuffer = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, instanceBuffer);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.meshData.instanceData, this.gl.DYNAMIC_DRAW);\n\n      // Each instance has 12 floats: 3 for position, 4 for rotation, 2 for scale, 3 for extra\n      const stride = 12 * 4; // 12 floats * 4 bytes per float\n\n      // Instance position (vec3)\n      const positionLoc = this.gl.getAttribLocation(this.program, 'aInstancePosition');\n      if (positionLoc >= 0) {\n        this.gl.enableVertexAttribArray(positionLoc);\n        this.gl.vertexAttribPointer(positionLoc, 3, this.gl.FLOAT, false, stride, 0);\n        this.gl.vertexAttribDivisor(positionLoc, 1);\n      }\n\n      // Instance rotation (vec4 - quaternion)\n      const rotationLoc = this.gl.getAttribLocation(this.program, 'aInstanceRotation');\n      if (rotationLoc >= 0) {\n        this.gl.enableVertexAttribArray(rotationLoc);\n        this.gl.vertexAttribPointer(rotationLoc, 4, this.gl.FLOAT, false, stride, 3 * 4);\n        this.gl.vertexAttribDivisor(rotationLoc, 1);\n      }\n\n      // Instance scale (vec2)\n      const scaleLoc = this.gl.getAttribLocation(this.program, 'aInstanceScale');\n      if (scaleLoc >= 0) {\n        this.gl.enableVertexAttribArray(scaleLoc);\n        this.gl.vertexAttribPointer(scaleLoc, 2, this.gl.FLOAT, false, stride, 7 * 4);\n        this.gl.vertexAttribDivisor(scaleLoc, 1);\n      }\n\n      // Instance extra (vec3)\n      const extraLoc = this.gl.getAttribLocation(this.program, 'aInstanceExtra');\n      if (extraLoc >= 0) {\n        this.gl.enableVertexAttribArray(extraLoc);\n        this.gl.vertexAttribPointer(extraLoc, 3, this.gl.FLOAT, false, stride, 9 * 4);\n        this.gl.vertexAttribDivisor(extraLoc, 1);\n      }\n    }\n  }\n\n  private setDefaultEffect(): void {\n    const vertexShader = `#version 300 es\n      in vec3 aPosition;\n      in vec2 aTexCoord;\n      \n      uniform vec2 uResolution;\n      uniform vec2 uImageSize0;\n      uniform vec2 uImageSize1;\n      uniform mat4 uProjectionMatrix;\n      uniform mat4 uModelViewMatrix;\n      \n      out vec2 vTexCoord;\n      \n      void main() {\n        gl_Position = vec4(aPosition.xy, 0.0, 1.0);\n        vTexCoord = aTexCoord;\n      }\n    `;\n\n    const fragmentShader = `#version 300 es\n      precision highp float;\n      \n      uniform sampler2D uTexture0;\n      uniform sampler2D uTexture1;\n      uniform float uProgress;\n      uniform vec2 uResolution;\n      uniform vec2 uImageSize0;\n      uniform vec2 uImageSize1;\n      \n      in vec2 vTexCoord;\n      out vec4 fragColor;\n      \n      // getCoverUV function for proper aspect ratio handling\n      vec2 getCoverUV(vec2 uv, vec2 imageSize, vec2 resolution) {\n        float imageAspect = imageSize.x / imageSize.y;\n        float screenAspect = resolution.x / resolution.y;\n        vec2 scale;\n        \n        if (screenAspect > imageAspect) {\n          scale = vec2(1.0, imageAspect / screenAspect);\n        } else {\n          scale = vec2(screenAspect / imageAspect, 1.0);\n        }\n        \n        return (uv - 0.5) / scale + 0.5;\n      }\n      \n      void main() {\n        vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n        vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n        \n        vec4 color0 = texture(uTexture0, uv0);\n        vec4 color1 = texture(uTexture1, uv1);\n        fragColor = mix(color0, color1, uProgress);\n      }\n    `;\n\n    this.setEffect({ vertexShader, fragmentShader });\n  }\n\n  setEffect(effect: {\n    vertexShader: string;\n    fragmentShader: string;\n    transformFeedbackVaryings?: string[];\n  }): void {\n    if (!this.gl) return;\n\n    try {\n      // Convert WebGL 1.0 shaders to WebGL 2.0 if needed\n      let vertexShader = effect.vertexShader;\n      let fragmentShader = effect.fragmentShader;\n\n      // Check if shaders are WebGL 1.0 style (no version directive)\n      if (!vertexShader.includes('#version')) {\n        vertexShader = this.convertVertexShaderToWebGL2(vertexShader);\n      }\n      if (!fragmentShader.includes('#version')) {\n        fragmentShader = this.convertFragmentShaderToWebGL2(fragmentShader);\n      }\n\n\n      const program = effect.transformFeedbackVaryings \n        ? this.createProgram(vertexShader, fragmentShader, effect.transformFeedbackVaryings)\n        : super.createProgram(vertexShader, fragmentShader);\n      if (program) {\n        if (this.program) {\n          this.gl.deleteProgram(this.program);\n        }\n        this.program = program;\n        super.cacheUniformsAndAttributes();\n\n        // Re-setup mesh attributes with new program\n        if (this.vertexArray && this.meshData) {\n          this.gl.bindVertexArray(this.vertexArray);\n          this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n          this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n          this.setupMeshAttributes();\n          this.gl.bindVertexArray(null);\n        }\n      }\n    } catch (error) {\n      this.emit('error', error as Error);\n    }\n  }\n\n  // Override to support transform feedback\n  protected createProgram(\n    vertexSource: string,\n    fragmentSource: string,\n    transformFeedbackVaryings?: string[],\n  ): WebGLProgram | null {\n    if (!this.gl) return null;\n\n    const vertexShader = this.compileShader(vertexSource, this.gl.VERTEX_SHADER);\n    const fragmentShader = this.compileShader(fragmentSource, this.gl.FRAGMENT_SHADER);\n\n    if (!vertexShader || !fragmentShader) return null;\n\n    const program = this.gl.createProgram();\n    if (!program) {\n      throw new Error('Failed to create shader program');\n    }\n\n    this.gl.attachShader(program, vertexShader);\n    this.gl.attachShader(program, fragmentShader);\n\n    // Setup transform feedback if specified\n    if (transformFeedbackVaryings && transformFeedbackVaryings.length > 0) {\n      this.gl.transformFeedbackVaryings(\n        program,\n        transformFeedbackVaryings,\n        this.gl.INTERLEAVED_ATTRIBS,\n      );\n    }\n\n    this.gl.linkProgram(program);\n\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      const error = this.gl.getProgramInfoLog(program);\n      this.gl.deleteProgram(program);\n      throw new Error(`Failed to link shader program: ${error}`);\n    }\n\n    this.gl.deleteShader(vertexShader);\n    this.gl.deleteShader(fragmentShader);\n\n    return program;\n  }\n\n  private compileShader(source: string, type: number): WebGLShader | null {\n    if (!this.gl) return null;\n\n    const shader = this.gl.createShader(type);\n    if (!shader) {\n      throw new Error('Failed to create shader');\n    }\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const error = this.gl.getShaderInfoLog(shader);\n      console.error('[WebGL2Renderer] Shader compilation error:', error);\n      this.gl.deleteShader(shader);\n      throw new Error(`Failed to compile shader: ${error}`);\n    }\n\n    return shader;\n  }\n\n  private cacheUniformsAndAttributes(): void {\n    if (!this.gl || !this.program) return;\n\n    this.uniforms.clear();\n    this.attributes.clear();\n    this.uniformBlockIndices.clear();\n\n    // Get all active uniforms\n    const numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n\n    for (let i = 0; i < numUniforms; i++) {\n      const info = this.gl.getActiveUniform(this.program, i);\n      if (info) {\n        const location = this.gl.getUniformLocation(this.program, info.name);\n        if (location) {\n          this.uniforms.set(info.name, location);\n        }\n      }\n    }\n\n    // Get all active attributes\n    const numAttributes = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < numAttributes; i++) {\n      const info = this.gl.getActiveAttrib(this.program, i);\n      if (info) {\n        const location = this.gl.getAttribLocation(this.program, info.name);\n        if (location >= 0) {\n          this.attributes.set(info.name, location);\n        }\n      }\n    }\n\n    // Cache uniform block indices\n    const numUniformBlocks = this.gl.getProgramParameter(\n      this.program,\n      this.gl.ACTIVE_UNIFORM_BLOCKS,\n    );\n    for (let i = 0; i < numUniformBlocks; i++) {\n      const name = this.gl.getActiveUniformBlockName(this.program, i);\n      if (name) {\n        const index = this.gl.getUniformBlockIndex(this.program, name);\n        this.uniformBlockIndices.set(name, index);\n      }\n    }\n  }\n\n  // Override to add WebGL2-specific texture features\n  protected createTexture(image: HTMLImageElement): WebGLTexture | null {\n    if (!this.gl) return null;\n\n    const texture = this.gl.createTexture();\n    if (!texture) return null;\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n\n    try {\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        image,\n      );\n    } catch (error) {\n      console.error('[WebGL2Renderer.createTexture] Failed to create texture:', error);\n      this.gl.deleteTexture(texture);\n      return null;\n    }\n\n    // Generate mipmaps\n    this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n    // Set texture parameters\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(\n      this.gl.TEXTURE_2D,\n      this.gl.TEXTURE_MIN_FILTER,\n      this.gl.LINEAR_MIPMAP_LINEAR,\n    );\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n\n    // Enable anisotropic filtering if available\n    const ext = this.gl.getExtension('EXT_texture_filter_anisotropic');\n    if (ext) {\n      const maxAnisotropy = this.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      this.gl.texParameterf(this.gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, maxAnisotropy);\n    }\n\n    return texture;\n  }\n\n  createComputeTexture(width: number, height: number, data?: Float32Array): WebGLTexture | null {\n    if (!this.gl) return null;\n\n    const texture = this.gl.createTexture();\n    if (!texture) return null;\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    this.gl.texImage2D(\n      this.gl.TEXTURE_2D,\n      0,\n      this.gl.RGBA32F,\n      width,\n      height,\n      0,\n      this.gl.RGBA,\n      this.gl.FLOAT,\n      data || null,\n    );\n\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n\n    return texture;\n  }\n\n  setupTransformFeedback(buffers: WebGLBuffer[], _varyings: string[]): void {\n    if (!this.gl) return;\n\n    if (this.transformFeedback) {\n      this.gl.deleteTransformFeedback(this.transformFeedback);\n    }\n\n    this.transformFeedback = this.gl.createTransformFeedback();\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, this.transformFeedback);\n\n    buffers.forEach((buffer, index) => {\n      this.gl!.bindBufferBase(this.gl!.TRANSFORM_FEEDBACK_BUFFER, index, buffer);\n    });\n\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, null);\n  }\n\n  render(\n    currentTexture: WebGLTexture | null,\n    nextTexture: WebGLTexture | null,\n    progress: number,\n    additionalUniforms?: Record<string, number | number[] | Float32Array>,\n    currentImageSrc?: string,\n    nextImageSrc?: string,\n    instanceCount?: number,\n  ): void {\n    if (!this.gl || !this.program || !currentTexture || !this.vertexArray) {\n      console.error('[WebGL2Renderer.render] Missing required resources:', {\n        gl: !!this.gl,\n        program: !!this.program,\n        currentTexture: !!currentTexture,\n        vertexArray: !!this.vertexArray,\n      });\n      return;\n    }\n\n    this.gl.useProgram(this.program);\n    this.gl.bindVertexArray(this.vertexArray);\n\n    // Clear\n    this.gl.clearColor(0, 0, 0, 0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n    // Bind textures\n    this.gl.activeTexture(this.gl.TEXTURE0);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, currentTexture);\n\n    if (nextTexture) {\n      this.gl.activeTexture(this.gl.TEXTURE1);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, nextTexture);\n    }\n\n    // Set uniforms\n    const texture0Loc = this.uniforms.get('uTexture0');\n    const texture1Loc = this.uniforms.get('uTexture1');\n    const progressLoc = this.uniforms.get('uProgress');\n\n    if (texture0Loc) this.gl.uniform1i(texture0Loc, 0);\n    if (texture1Loc) this.gl.uniform1i(texture1Loc, 1);\n    if (progressLoc) this.gl.uniform1f(progressLoc, progress);\n\n    // Set resolution uniform if available\n    const resolutionLoc = this.uniforms.get('uResolution');\n    if (resolutionLoc && this.canvas) {\n      this.gl.uniform2f(resolutionLoc, this.canvas.width, this.canvas.height);\n    }\n\n    // Set image size uniforms\n    super.setImageSizeUniforms(currentImageSrc, nextImageSrc);\n\n    // Set additional uniforms\n    if (additionalUniforms) {\n      Object.entries(additionalUniforms).forEach(([name, value]) => {\n        const location = this.uniforms.get(name);\n        if (location) {\n          if (value instanceof Float32Array) {\n            switch (value.length) {\n              case 16:\n                this.gl!.uniformMatrix4fv(location, false, value);\n                break;\n              case 9:\n                this.gl!.uniformMatrix3fv(location, false, value);\n                break;\n              case 4:\n                this.gl!.uniform4fv(location, value);\n                break;\n              case 3:\n                this.gl!.uniform3fv(location, value);\n                break;\n              case 2:\n                this.gl!.uniform2fv(location, value);\n                break;\n              default:\n                this.gl!.uniform1fv(location, value);\n            }\n          } else if (Array.isArray(value)) {\n            switch (value.length) {\n              case 2:\n                this.gl!.uniform2fv(location, value);\n                break;\n              case 3:\n                this.gl!.uniform3fv(location, value);\n                break;\n              case 4:\n                this.gl!.uniform4fv(location, value);\n                break;\n            }\n          } else {\n            this.gl!.uniform1f(location, value);\n          }\n        }\n      });\n    }\n\n    // Draw\n\n    try {\n      if (this.meshData) {\n        if (instanceCount && instanceCount > 1) {\n          this.gl.drawElementsInstanced(\n            this.gl.TRIANGLES,\n            this.meshData.indices.length,\n            this.gl.UNSIGNED_SHORT,\n            0,\n            instanceCount,\n          );\n        } else {\n          this.gl.drawElements(\n            this.gl.TRIANGLES,\n            this.meshData.indices.length,\n            this.gl.UNSIGNED_SHORT,\n            0,\n          );\n        }\n      } else {\n        this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n      }\n\n      // Check for GL errors\n      const error = this.gl.getError();\n      if (error !== this.gl.NO_ERROR) {\n        let errorString = 'Unknown error';\n        switch (error) {\n          case this.gl.INVALID_ENUM:\n            errorString = 'INVALID_ENUM';\n            break;\n          case this.gl.INVALID_VALUE:\n            errorString = 'INVALID_VALUE';\n            break;\n          case this.gl.INVALID_OPERATION:\n            errorString = 'INVALID_OPERATION';\n            break;\n          case this.gl.INVALID_FRAMEBUFFER_OPERATION:\n            errorString = 'INVALID_FRAMEBUFFER_OPERATION';\n            break;\n          case this.gl.OUT_OF_MEMORY:\n            errorString = 'OUT_OF_MEMORY';\n            break;\n        }\n        console.error(`[WebGL2Renderer.render] GL Error: ${error} (${errorString})`);\n      }\n    } catch (error) {\n      console.error('[WebGL2Renderer.render] Draw error:', error);\n      throw error;\n    }\n\n    this.gl.bindVertexArray(null);\n  }\n\n  renderWithTransformFeedback(\n    currentTexture: WebGLTexture | null,\n    nextTexture: WebGLTexture | null,\n    progress: number,\n    additionalUniforms?: Record<string, number | number[] | Float32Array>,\n  ): void {\n    if (!this.gl || !this.program || !this.transformFeedback) return;\n\n    this.gl.enable(this.gl.RASTERIZER_DISCARD);\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, this.transformFeedback);\n    this.gl.beginTransformFeedback(this.gl.POINTS);\n\n    this.render(currentTexture, nextTexture, progress, additionalUniforms);\n\n    this.gl.endTransformFeedback();\n    this.gl.bindTransformFeedback(this.gl.TRANSFORM_FEEDBACK, null);\n    this.gl.disable(this.gl.RASTERIZER_DISCARD);\n  }\n\n  dispose(): void {\n    if (!this.gl) return;\n\n    // Delete WebGL 2.0 specific resources\n    this.computeTextures.forEach((texture) => {\n      this.gl!.deleteTexture(texture);\n    });\n    this.computeTextures.clear();\n\n    // Delete buffers\n    if (this.vertexBuffer) {\n      this.gl.deleteBuffer(this.vertexBuffer);\n      this.vertexBuffer = null;\n    }\n\n    if (this.indexBuffer) {\n      this.gl.deleteBuffer(this.indexBuffer);\n      this.indexBuffer = null;\n    }\n\n    // Delete VAO\n    if (this.vertexArray) {\n      this.gl.deleteVertexArray(this.vertexArray);\n      this.vertexArray = null;\n    }\n\n    // Delete transform feedback\n    if (this.transformFeedback) {\n      this.gl.deleteTransformFeedback(this.transformFeedback);\n      this.transformFeedback = null;\n    }\n\n    // Call parent dispose\n    super.disposeCommon();\n  }\n\n  isInitialized(): boolean {\n    return super.isInitialized() && this.vertexArray !== null;\n  }\n\n  isWebGL2(): boolean {\n    return true;\n  }\n\n  private convertVertexShaderToWebGL2(shader: string): string {\n    let converted = shader;\n\n    // Remove any existing precision declarations first\n    converted = converted.replace(/precision\\s+\\w+\\s+float\\s*;/g, '');\n\n    // Add version and precision at the beginning\n    converted = '#version 300 es\\nprecision highp float;\\n' + converted;\n\n    // Convert attribute to in\n    converted = converted.replace(/\\battribute\\s+/g, 'in ');\n\n    // Convert varying to out\n    converted = converted.replace(/\\bvarying\\s+/g, 'out ');\n\n    return converted;\n  }\n\n  private convertFragmentShaderToWebGL2(shader: string): string {\n    let converted = shader;\n\n    // Remove any existing precision declarations first\n    converted = converted.replace(/precision\\s+\\w+\\s+float\\s*;/g, '');\n\n    // Add version, precision, and output variable at the beginning\n    converted = '#version 300 es\\nprecision highp float;\\nout vec4 fragColor;\\n' + converted;\n\n    // Convert varying to in\n    converted = converted.replace(/\\bvarying\\s+/g, 'in ');\n\n    // Replace gl_FragColor with fragColor\n    converted = converted.replace(/\\bgl_FragColor\\b/g, 'fragColor');\n\n    // Replace texture2D with texture\n    converted = converted.replace(/\\btexture2D\\s*\\(/g, 'texture(');\n\n    return converted;\n  }\n}\n","export interface Canvas2DFallbackOptions {\n  transitionDuration?: number;\n}\n\nexport class Canvas2DFallback {\n  private canvas: HTMLCanvasElement | null = null;\n  private ctx: CanvasRenderingContext2D | null = null;\n  private currentImage: HTMLImageElement | null = null;\n  private nextImage: HTMLImageElement | null = null;\n  private options: Canvas2DFallbackOptions;\n\n  constructor(options: Canvas2DFallbackOptions = {}) {\n    this.options = {\n      transitionDuration: 1000,\n      ...options,\n    };\n  }\n\n  initialize(canvas: HTMLCanvasElement): boolean {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n\n    if (!this.ctx) {\n      return false;\n    }\n\n    // Set image smoothing\n    this.ctx.imageSmoothingEnabled = true;\n    this.ctx.imageSmoothingQuality = 'high';\n\n    return true;\n  }\n\n  setImages(current: HTMLImageElement | null, next: HTMLImageElement | null): void {\n    this.currentImage = current;\n    this.nextImage = next;\n  }\n\n  render(progress: number): void {\n    if (!this.ctx || !this.canvas) return;\n\n    // Clear canvas\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Calculate dimensions to maintain aspect ratio\n    const canvasRatio = this.canvas.width / this.canvas.height;\n\n    if (this.currentImage && progress < 1) {\n      const imageRatio = this.currentImage.width / this.currentImage.height;\n      const { width, height, x, y } = this.calculateDimensions(\n        this.canvas.width,\n        this.canvas.height,\n        imageRatio,\n        canvasRatio,\n      );\n\n      // Draw current image with fade out effect\n      this.ctx.save();\n      this.ctx.globalAlpha = 1 - progress;\n      this.ctx.drawImage(this.currentImage, x, y, width, height);\n      this.ctx.restore();\n    }\n\n    if (this.nextImage && progress > 0) {\n      const imageRatio = this.nextImage.width / this.nextImage.height;\n      const { width, height, x, y } = this.calculateDimensions(\n        this.canvas.width,\n        this.canvas.height,\n        imageRatio,\n        canvasRatio,\n      );\n\n      // Draw next image with fade in effect\n      this.ctx.save();\n      this.ctx.globalAlpha = progress;\n      this.ctx.drawImage(this.nextImage, x, y, width, height);\n      this.ctx.restore();\n    }\n  }\n\n  private calculateDimensions(\n    canvasWidth: number,\n    canvasHeight: number,\n    imageRatio: number,\n    canvasRatio: number,\n  ): { width: number; height: number; x: number; y: number } {\n    let width: number;\n    let height: number;\n    let x = 0;\n    let y = 0;\n\n    if (imageRatio > canvasRatio) {\n      // Image is wider than canvas\n      width = canvasWidth;\n      height = canvasWidth / imageRatio;\n      y = (canvasHeight - height) / 2;\n    } else {\n      // Image is taller than canvas\n      height = canvasHeight;\n      width = canvasHeight * imageRatio;\n      x = (canvasWidth - width) / 2;\n    }\n\n    return { width, height, x, y };\n  }\n\n  resize(width: number, height: number): void {\n    if (!this.canvas) return;\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    // Redraw after resize\n    this.render(0);\n  }\n\n  dispose(): void {\n    this.canvas = null;\n    this.ctx = null;\n    this.currentImage = null;\n    this.nextImage = null;\n  }\n\n  isInitialized(): boolean {\n    return this.ctx !== null;\n  }\n\n  getContext(): CanvasRenderingContext2D | null {\n    return this.ctx;\n  }\n}\n","export interface IEffect {\n  readonly name: string;\n  readonly vertexShader: string;\n  readonly fragmentShader: string;\n\n  getUniforms(progress: number): Record<string, number | number[] | Float32Array>;\n\n  // Optional hooks\n  onBeforeRender?(gl: WebGLRenderingContext): void;\n  onAfterRender?(gl: WebGLRenderingContext): void;\n\n  // Optional properties for advanced effects\n  readonly requiresWebGL2?: boolean;\n  readonly requiresCustomMesh?: boolean;\n  getMesh?(): {\n    positions: Float32Array;\n    indices: Uint16Array;\n    texCoords: Float32Array;\n    normals?: Float32Array;\n  };\n  getInstanceData?(): { positions: Float32Array; offsets: Float32Array; scales: Float32Array };\n}\n\nexport class EffectManager {\n  private effects: Map<string, IEffect> = new Map();\n  private defaultEffectName = 'fade';\n\n  register(effect: IEffect): void {\n    if (!effect.name) {\n      throw new Error('Effect must have a name');\n    }\n\n    if (this.effects.has(effect.name)) {\n      console.warn(`Effect \"${effect.name}\" is already registered. Overwriting...`);\n    }\n\n    this.effects.set(effect.name, effect);\n  }\n\n  unregister(name: string): boolean {\n    return this.effects.delete(name);\n  }\n\n  get(name: string): IEffect | null {\n    return this.effects.get(name) || null;\n  }\n\n  has(name: string): boolean {\n    return this.effects.has(name);\n  }\n\n  list(): string[] {\n    return Array.from(this.effects.keys());\n  }\n\n  clear(): void {\n    this.effects.clear();\n  }\n\n  size(): number {\n    return this.effects.size;\n  }\n\n  setDefault(name: string): void {\n    if (!this.effects.has(name)) {\n      throw new Error(`Effect \"${name}\" is not registered`);\n    }\n    this.defaultEffectName = name;\n  }\n\n  getDefault(): IEffect | null {\n    return this.get(this.defaultEffectName);\n  }\n\n  getDefaultName(): string {\n    return this.defaultEffectName;\n  }\n}\n\n// Factory function for creating effect managers with pre-registered effects\nexport function createEffectManager(effects?: IEffect[]): EffectManager {\n  const manager = new EffectManager();\n\n  if (effects) {\n    effects.forEach((effect) => manager.register(effect));\n  }\n\n  return manager;\n}\n","import { IEffect } from '../core/EffectManager';\nimport { TriangleMesh } from '../utils/MeshGenerator';\n\nexport abstract class BaseEffect implements IEffect {\n  abstract readonly name: string;\n\n  // Default vertex shader that can be overridden\n  readonly vertexShader: string = `\n    attribute vec2 aPosition;\n    attribute vec2 aTexCoord;\n    \n    varying vec2 vTexCoord;\n    \n    void main() {\n      gl_Position = vec4(aPosition, 0.0, 1.0);\n      vTexCoord = aTexCoord;\n    }\n  `;\n\n  abstract readonly fragmentShader: string;\n\n  abstract getUniforms(progress: number): Record<string, number | number[] | Float32Array>;\n\n  // Optional lifecycle hooks\n  onBeforeRender?(gl: WebGLRenderingContext | WebGL2RenderingContext): void;\n  onAfterRender?(gl: WebGLRenderingContext | WebGL2RenderingContext): void;\n\n  // WebGL 2.0 support\n  get requiresWebGL2(): boolean {\n    return false;\n  }\n\n  // Custom mesh support\n  get requiresCustomMesh(): boolean {\n    return false;\n  }\n\n  getMesh?(): TriangleMesh {\n    throw new Error('getMesh() must be implemented for effects that require custom meshes');\n  }\n\n  // Instance data for instanced rendering\n  getInstanceData?(): { positions: Float32Array; offsets: Float32Array; scales: Float32Array } {\n    return {\n      positions: new Float32Array(0),\n      offsets: new Float32Array(0),\n      scales: new Float32Array(0),\n    };\n  }\n\n  // Transform feedback varyings for WebGL 2.0\n  getTransformFeedbackVaryings?(): string[] {\n    return [];\n  }\n}\n","// Common shader functions and utilities\n\nexport const commonShaderFunctions = `\n  // Custom smooth step function for transitions\n  float customSmoothstep(float edge0, float edge1, float x) {\n    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    return t * t * (3.0 - 2.0 * t);\n  }\n  \n  // Cubic easing function\n  float cubicInOut(float t) {\n    return t < 0.5\n      ? 4.0 * t * t * t\n      : 1.0 - pow(-2.0 * t + 2.0, 3.0) / 2.0;\n  }\n  \n  // Linear interpolation\n  vec4 mix4(vec4 a, vec4 b, float t) {\n    return a * (1.0 - t) + b * t;\n  }\n  \n  // 2D rotation matrix\n  mat2 rotate2d(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n  }\n  \n  // Convert normalized coordinates to aspect-corrected coordinates\n  vec2 aspectCorrect(vec2 uv, vec2 resolution) {\n    float aspect = resolution.x / resolution.y;\n    return vec2(uv.x * aspect, uv.y);\n  }\n`;\n\nexport const createFragmentShader = (effectCode: string, includeCommon = true): string => {\n  const common = includeCommon ? commonShaderFunctions : '';\n\n  return `\n    precision mediump float;\n    \n    uniform sampler2D uTexture0;\n    uniform sampler2D uTexture1;\n    uniform float uProgress;\n    uniform vec2 uResolution;\n    uniform vec2 uImageSize0;\n    uniform vec2 uImageSize1;\n    \n    varying vec2 vTexCoord;\n    \n    // Calculate UV coordinates for cover fit\n    vec2 getCoverUV(vec2 uv, vec2 imageSize, vec2 resolution) {\n      // Ensure we have valid sizes\n      if (imageSize.x <= 0.0 || imageSize.y <= 0.0 || resolution.x <= 0.0 || resolution.y <= 0.0) {\n        return uv;\n      }\n      \n      float imageAspect = imageSize.x / imageSize.y;\n      float canvasAspect = resolution.x / resolution.y;\n      \n      vec2 scale = vec2(1.0);\n      if (imageAspect > canvasAspect) {\n        // Image is wider, scale by height\n        scale.x = imageAspect / canvasAspect;\n      } else {\n        // Image is taller, scale by width\n        scale.y = canvasAspect / imageAspect;\n      }\n      \n      // Center the UV coordinates\n      vec2 scaledUV = (uv - 0.5) / scale + 0.5;\n      \n      return scaledUV;\n    }\n    \n    ${common}\n    \n    ${effectCode}\n  `;\n};\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport class FadeEffect extends BaseEffect {\n  readonly name = 'fade';\n\n  readonly fragmentShader = createFragmentShader(`\n    void main() {\n      vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n      \n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Simple linear fade\n      gl_FragColor = mix(color0, color1, uProgress);\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport type SlideDirection = 'left' | 'right' | 'up' | 'down';\n\nexport class SlideEffect extends BaseEffect {\n  readonly name: string;\n  private direction: SlideDirection;\n\n  constructor(direction: SlideDirection = 'left') {\n    super();\n    this.direction = direction;\n    this.name = `slide${direction.charAt(0).toUpperCase() + direction.slice(1)}`;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform vec2 uDirection;\n    \n    void main() {\n      vec2 uv = vTexCoord;\n      \n      // Calculate offset based on progress\n      vec2 offset = uDirection * uProgress;\n      \n      // Calculate UVs for both images with proper aspect ratio\n      vec2 uv0 = getCoverUV(uv + offset, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(uv + offset - uDirection, uImageSize1, uResolution);\n      \n      // Sample textures\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Calculate transition boundary\n      vec2 transitionUV = uv + offset - uDirection;\n      \n      // Create mask based on direction\n      float mask;\n      if (abs(uDirection.x) > 0.5) {\n        // Horizontal slide\n        mask = step(0.0, transitionUV.x) * step(transitionUV.x, 1.0);\n      } else {\n        // Vertical slide\n        mask = step(0.0, transitionUV.y) * step(transitionUV.y, 1.0);\n      }\n      \n      gl_FragColor = mix(color0, color1, mask);\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    let direction: number[] = [0, 0];\n\n    switch (this.direction) {\n      case 'left':\n        direction = [-1, 0];\n        break;\n      case 'right':\n        direction = [1, 0];\n        break;\n      case 'up':\n        direction = [0, 1];\n        break;\n      case 'down':\n        direction = [0, -1];\n        break;\n    }\n\n    return {\n      uProgress: progress,\n      uDirection: direction,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport type FlipAxis = 'horizontal' | 'vertical';\n\nexport class FlipEffect extends BaseEffect {\n  readonly name: string;\n  private axis: FlipAxis;\n\n  constructor(axis: FlipAxis = 'horizontal') {\n    super();\n    this.axis = axis;\n    this.name = `flip${axis.charAt(0).toUpperCase() + axis.slice(1)}`;\n  }\n\n  // カスタム頂点シェーダー - 画像を変形\n  readonly vertexShader = `\n    attribute vec2 aPosition;\n    attribute vec2 aTexCoord;\n    \n    uniform float uProgress;\n    uniform float uAxis;\n    \n    varying vec2 vTexCoord;\n    \n    void main() {\n      vTexCoord = aTexCoord;\n      \n      // 回転角度\n      float angle = uProgress * 3.14159;\n      float scale = abs(cos(angle));\n      \n      vec2 position = aPosition;\n      \n      if (uAxis < 0.5) {\n        // Horizontal flip - X方向のみ縮小\n        position.x *= scale;\n      } else {\n        // Vertical flip - Y方向のみ縮小  \n        position.y *= scale;\n      }\n      \n      gl_Position = vec4(position, 0.0, 1.0);\n    }\n  `;\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uAxis;\n    \n    void main() {\n      vec2 uv = vTexCoord;\n      \n      // 回転角度\n      float angle = uProgress * 3.14159;\n      float cosAngle = cos(angle);\n      \n      // スケール計算（0で完全に消える）\n      float scale = abs(cosAngle);\n      \n      // 表裏の判定\n      bool isBackface = cosAngle < 0.0;\n      \n      vec4 finalColor;\n      \n      if (!isBackface) {\n        // 表面：1枚目の画像\n        vec2 uv0 = getCoverUV(uv, uImageSize0, uResolution);\n        finalColor = texture2D(uTexture0, uv0);\n      } else {\n        // 裏面：2枚目の画像\n        vec2 uv1 = getCoverUV(uv, uImageSize1, uResolution);\n        finalColor = texture2D(uTexture1, uv1);\n      }\n      \n      // 軽いシェーディング効果\n      float shading = 0.7 + 0.3 * scale;\n      finalColor.rgb *= shading;\n      \n      gl_FragColor = finalColor;\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uAxis: this.axis === 'vertical' ? 1 : 0,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface WaveOptions {\n  amplitude?: number;\n  frequency?: number;\n  speed?: number;\n}\n\nexport class WaveEffect extends BaseEffect {\n  name = 'wave';\n  private amplitude: number;\n  private frequency: number;\n  private speed: number;\n\n  constructor(options: WaveOptions = {}) {\n    super();\n    this.amplitude = options.amplitude ?? 0.1;\n    this.frequency = options.frequency ?? 10.0;\n    this.speed = options.speed ?? 1.0;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uAmplitude;\n    uniform float uFrequency;\n    uniform float uSpeed;\n    uniform float uTime;\n    \n    void main() {\n      vec2 uv = vTexCoord;\n      \n      // Create wave displacement\n      float wave = sin(uv.y * uFrequency + uTime * uSpeed) * uAmplitude;\n      \n      // Apply wave based on progress\n      float displacement = wave * (1.0 - abs(uProgress - 0.5) * 2.0);\n      \n      // Apply wave displacement then aspect ratio correction\n      vec2 displacedUV0 = vec2(uv.x + displacement * (1.0 - uProgress), uv.y);\n      vec2 displacedUV1 = vec2(uv.x + displacement * uProgress, uv.y);\n      \n      vec2 uv0 = getCoverUV(displacedUV0, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(displacedUV1, uImageSize1, uResolution);\n      \n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Mix with wave-influenced progress\n      float mixFactor = smoothstep(0.0, 1.0, uProgress + wave * 0.5);\n      \n      gl_FragColor = mix(color0, color1, mixFactor);\n    }\n  `);\n\n  private startTime = Date.now();\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    const time = (Date.now() - this.startTime) / 1000; // Convert to seconds\n\n    return {\n      uProgress: progress,\n      uAmplitude: this.amplitude,\n      uFrequency: this.frequency,\n      uSpeed: this.speed,\n      uTime: time,\n    };\n  }\n\n  onBeforeRender(_gl: WebGLRenderingContext): void {\n    // Reset time on each transition start\n    if (this.lastProgress === 0 && this.lastProgress !== undefined) {\n      this.startTime = Date.now();\n    }\n    this.lastProgress = this.lastProgress ?? 0;\n  }\n\n  private lastProgress?: number;\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface DistortionOptions {\n  intensity?: number;\n  radius?: number;\n  spiral?: number;\n}\n\nexport class DistortionEffect extends BaseEffect {\n  name = 'distortion';\n  private intensity: number;\n  private radius: number;\n  private spiral: number;\n\n  constructor(options: DistortionOptions = {}) {\n    super();\n    this.intensity = options.intensity ?? 0.5;\n    this.radius = options.radius ?? 0.8;\n    this.spiral = options.spiral ?? 2.0;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uIntensity;\n    uniform float uRadius;\n    uniform float uSpiral;\n    \n    vec2 distort(vec2 uv, float progress) {\n      // Center the coordinates\n      vec2 center = vec2(0.5, 0.5);\n      vec2 dir = uv - center;\n      float dist = length(dir);\n      \n      // Create distortion effect\n      float distortionAmount = 0.0;\n      \n      if (dist < uRadius) {\n        // Smooth the edge of distortion\n        float edge = smoothstep(0.0, uRadius, dist);\n        \n        // Calculate rotation based on distance and progress\n        float angle = progress * uSpiral * (1.0 - edge);\n        \n        // Apply rotation\n        float s = sin(angle);\n        float c = cos(angle);\n        dir = vec2(\n          dir.x * c - dir.y * s,\n          dir.x * s + dir.y * c\n        );\n        \n        // Add radial distortion\n        float radialDistort = (1.0 - edge) * progress * uIntensity;\n        dir *= 1.0 + radialDistort;\n      }\n      \n      return center + dir;\n    }\n    \n    void main() {\n      // Create two different distortion phases\n      float phase1 = smoothstep(0.0, 0.5, uProgress);\n      float phase2 = smoothstep(0.5, 1.0, uProgress);\n      \n      // Distort UV coordinates\n      vec2 distortedUV0 = distort(vTexCoord, phase1);\n      vec2 distortedUV1 = distort(vTexCoord, 1.0 - phase2);\n      \n      // Apply aspect ratio correction after distortion\n      vec2 uv0 = getCoverUV(distortedUV0, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(distortedUV1, uImageSize1, uResolution);\n      \n      // Sample textures\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Mix based on progress\n      float mixFactor = smoothstep(0.4, 0.6, uProgress);\n      \n      gl_FragColor = mix(color0, color1, mixFactor);\n      \n      // Add vignette effect during transition\n      float vignette = 1.0 - length(vTexCoord - 0.5) * 0.5 * sin(uProgress * 3.14159);\n      gl_FragColor.rgb *= vignette;\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uIntensity: this.intensity,\n      uRadius: this.radius,\n      uSpiral: this.spiral,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface DissolveOptions {\n  scale?: number;\n  threshold?: number;\n  fadeWidth?: number;\n}\n\nexport class DissolveEffect extends BaseEffect {\n  name = 'dissolve';\n  private scale: number;\n  private threshold: number;\n  private fadeWidth: number;\n\n  constructor(options: DissolveOptions = {}) {\n    super();\n    this.scale = options.scale ?? 10.0;\n    this.threshold = options.threshold ?? 0.5;\n    this.fadeWidth = options.fadeWidth ?? 0.1;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uScale;\n    uniform float uThreshold;\n    uniform float uFadeWidth;\n    \n    // Simple pseudo-random function\n    float random(vec2 co) {\n      return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n    }\n    \n    // Noise function\n    float noise(vec2 p) {\n      vec2 i = floor(p);\n      vec2 f = fract(p);\n      \n      float a = random(i);\n      float b = random(i + vec2(1.0, 0.0));\n      float c = random(i + vec2(0.0, 1.0));\n      float d = random(i + vec2(1.0, 1.0));\n      \n      vec2 u = f * f * (3.0 - 2.0 * f);\n      \n      return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n    }\n    \n    void main() {\n      // Apply aspect ratio correction\n      vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n      \n      // Generate noise for dissolve effect\n      float n = noise(vTexCoord * uScale);\n      \n      // Add some variation with multiple octaves\n      n += noise(vTexCoord * uScale * 2.0) * 0.5;\n      n += noise(vTexCoord * uScale * 4.0) * 0.25;\n      n = n / 1.75; // Normalize\n      \n      // Calculate dissolve threshold\n      float threshold = uProgress * (1.0 + uFadeWidth * 2.0) - uFadeWidth;\n      \n      // Create smooth transition\n      float alpha = smoothstep(threshold - uFadeWidth, threshold + uFadeWidth, n);\n      \n      // Sample textures\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Mix colors based on dissolve\n      gl_FragColor = mix(color1, color0, alpha);\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uScale: this.scale,\n      uThreshold: this.threshold,\n      uFadeWidth: this.fadeWidth,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface CircleOptions {\n  centerX?: number;\n  centerY?: number;\n  feather?: number;\n  scale?: number;\n}\n\nexport class CircleEffect extends BaseEffect {\n  name = 'circle';\n  private centerX: number;\n  private centerY: number;\n  private feather: number;\n  private scale: number;\n\n  constructor(options: CircleOptions = {}) {\n    super();\n    this.centerX = options.centerX ?? 0.5;\n    this.centerY = options.centerY ?? 0.5;\n    this.feather = options.feather ?? 0.1;\n    this.scale = options.scale ?? 1.0;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform vec2 uCenter;\n    uniform float uFeather;\n    uniform float uScale;\n    \n    void main() {\n      // Apply aspect ratio correction\n      vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n      \n      // Calculate distance from center\n      vec2 center = uCenter;\n      vec2 pos = vTexCoord - center;\n      \n      // Correct for aspect ratio\n      float aspect = uResolution.x / uResolution.y;\n      pos.x *= aspect;\n      \n      float dist = length(pos);\n      \n      // Calculate circle radius based on progress\n      float radius = uProgress * uScale * sqrt(2.0); // sqrt(2) to cover corners\n      \n      // Create smooth edge\n      float alpha = smoothstep(radius - uFeather, radius + uFeather, dist);\n      \n      // Sample textures\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Mix based on circle mask\n      gl_FragColor = mix(color1, color0, alpha);\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uCenter: [this.centerX, this.centerY],\n      uFeather: this.feather,\n      uScale: this.scale,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface PixelDissolveOptions {\n  pixelSize?: number;\n  stagger?: number;\n}\n\nexport class PixelDissolveEffect extends BaseEffect {\n  name = 'pixelDissolve';\n  private pixelSize: number;\n  private stagger: number;\n\n  constructor(options: PixelDissolveOptions = {}) {\n    super();\n    this.pixelSize = options.pixelSize ?? 20.0;\n    this.stagger = options.stagger ?? 0.3;\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uPixelSize;\n    uniform float uStagger;\n    \n    // Simple pseudo-random function\n    float random(vec2 co) {\n      return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n    }\n    \n    void main() {\n      // Apply aspect ratio correction\n      vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n      \n      // Calculate pixel grid coordinates\n      vec2 pixelCoord = floor(vTexCoord * uResolution / uPixelSize);\n      \n      // Generate random value per pixel\n      float pixelRandom = random(pixelCoord);\n      \n      // Add some variation based on position\n      float positionBias = (pixelCoord.x + pixelCoord.y) / (uResolution.x / uPixelSize + uResolution.y / uPixelSize);\n      pixelRandom = mix(pixelRandom, positionBias, uStagger);\n      \n      // Calculate transition threshold\n      float threshold = uProgress;\n      \n      // Determine pixel visibility with hard edge\n      float alpha = step(pixelRandom, threshold);\n      \n      // Sample textures\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // Mix colors based on pixel visibility\n      gl_FragColor = mix(color0, color1, alpha);\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uPixelSize: this.pixelSize,\n      uStagger: this.stagger,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface MorphOptions {\n  gridSize?: number;\n  morphIntensity?: number;\n  twistAmount?: number;\n  waveFrequency?: number;\n}\n\nexport class MorphEffect extends BaseEffect {\n  name = 'morph';\n  private gridSize: number;\n  private morphIntensity: number;\n  private twistAmount: number;\n  private waveFrequency: number;\n\n  constructor(options: MorphOptions = {}) {\n    super();\n    this.gridSize = options.gridSize ?? 50.0;\n    this.morphIntensity = options.morphIntensity ?? 0.3;\n    this.twistAmount = options.twistAmount ?? 2.0;\n    this.waveFrequency = options.waveFrequency ?? 3.0;\n  }\n\n  // カスタム頂点シェーダー - 頂点を動的に変形\n  readonly vertexShader = `\n    attribute vec2 aPosition;\n    attribute vec2 aTexCoord;\n    \n    uniform float uProgress;\n    uniform float uMorphIntensity;\n    uniform float uTwistAmount;\n    uniform float uWaveFrequency;\n    uniform vec2 uResolution;\n    \n    varying vec2 vTexCoord;\n    varying float vMorphAmount;\n    \n    void main() {\n      vTexCoord = aTexCoord;\n      \n      // 中心からの距離を計算\n      vec2 center = vec2(0.5, 0.5);\n      vec2 toCenter = aTexCoord - center;\n      float dist = length(toCenter);\n      \n      // プログレスに基づくモーフ量を計算\n      float morphProgress = smoothstep(0.0, 1.0, uProgress);\n      float morphAmount = sin(morphProgress * 3.14159);\n      vMorphAmount = morphAmount;\n      \n      // 頂点の変位を計算\n      vec2 position = aPosition;\n      \n      // ツイスト効果\n      float angle = atan(toCenter.y, toCenter.x);\n      float twist = sin(angle * uWaveFrequency + morphProgress * uTwistAmount) * morphAmount;\n      position.x += twist * toCenter.y * uMorphIntensity;\n      position.y -= twist * toCenter.x * uMorphIntensity;\n      \n      // 波形効果\n      float wave = sin(dist * 10.0 - morphProgress * 5.0) * morphAmount;\n      position += normalize(toCenter) * wave * uMorphIntensity * 0.5;\n      \n      // Z軸の変位（3D効果）\n      float z = sin(dist * 8.0 + morphProgress * 4.0) * morphAmount * 0.3;\n      \n      gl_Position = vec4(position, z, 1.0);\n    }\n  `;\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uGridSize;\n    varying float vMorphAmount;\n    \n    void main() {\n      vec2 uv0 = getCoverUV(vTexCoord, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(vTexCoord, uImageSize1, uResolution);\n      \n      // グリッドベースの歪み\n      vec2 gridUV = vTexCoord * uGridSize;\n      vec2 gridPos = floor(gridUV);\n      vec2 gridFract = fract(gridUV);\n      \n      // モーフ量に基づく歪み\n      vec2 distortion = sin(gridPos * 0.1 + vMorphAmount * 3.14159) * 0.02 * vMorphAmount;\n      \n      vec2 distortedUV0 = uv0 + distortion;\n      vec2 distortedUV1 = uv1 - distortion;\n      \n      vec4 color0 = texture2D(uTexture0, distortedUV0);\n      vec4 color1 = texture2D(uTexture1, distortedUV1);\n      \n      // エッジ効果\n      float edge = 1.0 - smoothstep(0.4, 0.5, abs(gridFract.x - 0.5)) * \n                         smoothstep(0.4, 0.5, abs(gridFract.y - 0.5));\n      edge *= vMorphAmount;\n      \n      // カラーミックス\n      float mixFactor = smoothstep(0.3, 0.7, uProgress);\n      vec4 finalColor = mix(color0, color1, mixFactor);\n      \n      // エッジハイライト\n      finalColor.rgb += vec3(edge * 0.2);\n      \n      // 色収差効果\n      vec2 aberration = distortion * 2.0;\n      finalColor.r = mix(\n        texture2D(uTexture0, distortedUV0 + aberration).r,\n        texture2D(uTexture1, distortedUV1 + aberration).r,\n        mixFactor\n      );\n      finalColor.b = mix(\n        texture2D(uTexture0, distortedUV0 - aberration).b,\n        texture2D(uTexture1, distortedUV1 - aberration).b,\n        mixFactor\n      );\n      \n      gl_FragColor = finalColor;\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    return {\n      uProgress: progress,\n      uGridSize: this.gridSize,\n      uMorphIntensity: this.morphIntensity,\n      uTwistAmount: this.twistAmount,\n      uWaveFrequency: this.waveFrequency,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { createFragmentShader } from './shaderUtils';\n\nexport interface GlitchOptions {\n  intensity?: number;\n  sliceCount?: number;\n  colorShift?: number;\n  noiseAmount?: number;\n}\n\nexport class GlitchEffect extends BaseEffect {\n  name = 'glitch';\n  private intensity: number;\n  private sliceCount: number;\n  private colorShift: number;\n  private noiseAmount: number;\n  private startTime: number;\n\n  constructor(options: GlitchOptions = {}) {\n    super();\n    this.intensity = options.intensity ?? 0.5;\n    this.sliceCount = options.sliceCount ?? 15.0;\n    this.colorShift = options.colorShift ?? 0.03;\n    this.noiseAmount = options.noiseAmount ?? 0.1;\n    this.startTime = Date.now();\n  }\n\n  readonly fragmentShader = createFragmentShader(`\n    uniform float uIntensity;\n    uniform float uSliceCount;\n    uniform float uColorShift;\n    uniform float uNoiseAmount;\n    uniform float uTime;\n    \n    // 擬似乱数生成\n    float random(vec2 co) {\n      return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n    }\n    \n    // ノイズ関数\n    float noise(vec2 p) {\n      vec2 i = floor(p);\n      vec2 f = fract(p);\n      \n      float a = random(i);\n      float b = random(i + vec2(1.0, 0.0));\n      float c = random(i + vec2(0.0, 1.0));\n      float d = random(i + vec2(1.0, 1.0));\n      \n      vec2 u = f * f * (3.0 - 2.0 * f);\n      \n      return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n    }\n    \n    void main() {\n      vec2 uv = vTexCoord;\n      \n      // グリッチ強度の計算（時間ベース）\n      float glitchStrength = step(0.5, sin(uTime * 20.0)) * uIntensity;\n      glitchStrength *= step(0.8, random(vec2(uTime * 10.0, 0.0)));\n      \n      // プログレスに基づくグリッチの増減\n      float progressGlitch = sin(uProgress * 3.14159);\n      glitchStrength *= progressGlitch;\n      \n      // 水平スライスの計算\n      float slice = floor(uv.y * uSliceCount);\n      float sliceOffset = random(vec2(slice, uTime)) * 2.0 - 1.0;\n      sliceOffset *= step(0.7, random(vec2(slice * 2.0, uTime * 10.0))) * glitchStrength;\n      \n      // UV座標の歪み\n      vec2 distortedUV = uv;\n      distortedUV.x += sliceOffset * 0.1;\n      \n      // ブロックノイズ\n      vec2 blockSize = vec2(0.05, 0.03);\n      vec2 blockCoord = floor(uv / blockSize) * blockSize;\n      float blockNoise = step(0.9, random(blockCoord + vec2(uTime * 5.0))) * glitchStrength;\n      distortedUV += blockNoise * (random(blockCoord * 2.0) - 0.5) * uNoiseAmount;\n      \n      // アスペクト比補正を適用\n      vec2 uv0 = getCoverUV(distortedUV, uImageSize0, uResolution);\n      vec2 uv1 = getCoverUV(distortedUV, uImageSize1, uResolution);\n      \n      // テクスチャサンプリング\n      vec4 color0 = texture2D(uTexture0, uv0);\n      vec4 color1 = texture2D(uTexture1, uv1);\n      \n      // RGB分離（グリッチ効果）\n      vec4 color0Shift = vec4(\n        texture2D(uTexture0, getCoverUV(distortedUV + vec2(uColorShift * glitchStrength, 0.0), uImageSize0, uResolution)).r,\n        color0.g,\n        texture2D(uTexture0, getCoverUV(distortedUV - vec2(uColorShift * glitchStrength, 0.0), uImageSize0, uResolution)).b,\n        color0.a\n      );\n      \n      vec4 color1Shift = vec4(\n        texture2D(uTexture1, getCoverUV(distortedUV + vec2(uColorShift * glitchStrength, 0.0), uImageSize1, uResolution)).r,\n        color1.g,\n        texture2D(uTexture1, getCoverUV(distortedUV - vec2(uColorShift * glitchStrength, 0.0), uImageSize1, uResolution)).b,\n        color1.a\n      );\n      \n      // カラーミックス\n      float mixFactor = smoothstep(0.3, 0.7, uProgress);\n      vec4 finalColor = mix(color0Shift, color1Shift, mixFactor);\n      \n      // デジタルノイズ\n      float digitalNoise = random(uv + vec2(uTime * 100.0)) * glitchStrength * 0.1;\n      finalColor.rgb += vec3(digitalNoise);\n      \n      // カラー反転（ランダム）\n      float invertChance = step(0.95, random(vec2(uTime * 30.0))) * glitchStrength;\n      finalColor.rgb = mix(finalColor.rgb, 1.0 - finalColor.rgb, invertChance);\n      \n      // スキャンライン\n      float scanline = sin(uv.y * 800.0) * 0.04 * glitchStrength;\n      finalColor.rgb -= scanline;\n      \n      gl_FragColor = finalColor;\n    }\n  `);\n\n  getUniforms(progress: number): Record<string, number | number[]> {\n    const time = (Date.now() - this.startTime) / 1000;\n    return {\n      uProgress: progress,\n      uIntensity: this.intensity,\n      uSliceCount: this.sliceCount,\n      uColorShift: this.colorShift,\n      uNoiseAmount: this.noiseAmount,\n      uTime: time,\n    };\n  }\n}\n","import { BaseEffect } from './BaseEffect';\nimport { TriangleMesh } from '../utils/MeshGenerator';\n\nexport interface CustomEffectOptions {\n  name: string;\n  vertexShader: string;\n  fragmentShader: string;\n  uniforms?: () => Record<string, number | number[] | Float32Array>;\n  requiresWebGL2?: boolean;\n  requiresCustomMesh?: boolean;\n  getMesh?: () => { positions: Float32Array; indices: Uint16Array };\n  getInstanceData?: () => Float32Array | null;\n  getTransformFeedbackVaryings?: () => string[];\n}\n\n/**\n * Custom effect that allows loading external shaders\n */\nexport class CustomEffect extends BaseEffect {\n  name: string;\n  vertexShader: string;\n  fragmentShader: string;\n  private uniformsGetter?: () => Record<string, number | number[] | Float32Array>;\n  private _requiresWebGL2: boolean;\n  private _requiresCustomMesh: boolean;\n  private _getMesh?: () => { positions: Float32Array; indices: Uint16Array };\n  private _getInstanceData?: () => Float32Array | null;\n  private _getTransformFeedbackVaryings?: () => string[];\n\n  constructor(options: CustomEffectOptions) {\n    super();\n    this.name = options.name;\n    this.vertexShader = options.vertexShader;\n    this.fragmentShader = options.fragmentShader;\n    this.uniformsGetter = options.uniforms;\n    this._requiresWebGL2 = options.requiresWebGL2 ?? false;\n    this._requiresCustomMesh = options.requiresCustomMesh ?? false;\n    this._getMesh = options.getMesh;\n    this._getInstanceData = options.getInstanceData;\n    this._getTransformFeedbackVaryings = options.getTransformFeedbackVaryings;\n  }\n\n  getUniforms(progress: number): Record<string, number | number[] | Float32Array> {\n    const baseUniforms = {\n      uProgress: progress,\n    };\n\n    if (this.uniformsGetter) {\n      return { ...baseUniforms, ...this.uniformsGetter() };\n    }\n\n    return baseUniforms;\n  }\n\n  get requiresWebGL2(): boolean {\n    return this._requiresWebGL2;\n  }\n\n  get requiresCustomMesh(): boolean {\n    return this._requiresCustomMesh;\n  }\n\n  getMesh(): TriangleMesh {\n    if (this._getMesh) {\n      const mesh = this._getMesh();\n      return {\n        positions: mesh.positions,\n        indices: mesh.indices,\n        texCoords: new Float32Array(0), // Default empty\n        normals: new Float32Array(0), // Default empty\n        triangles: [],\n      };\n    }\n    throw new Error('getMesh() not implemented for this custom effect');\n  }\n\n  getInstanceData(): { positions: Float32Array; offsets: Float32Array; scales: Float32Array } {\n    if (this._getInstanceData) {\n      const data = this._getInstanceData();\n      if (data) {\n        // Convert Float32Array to the expected format\n        return {\n          positions: data,\n          offsets: new Float32Array(0),\n          scales: new Float32Array(0),\n        };\n      }\n    }\n    // Return empty data instead of null to match BaseEffect\n    return {\n      positions: new Float32Array(0),\n      offsets: new Float32Array(0),\n      scales: new Float32Array(0),\n    };\n  }\n\n  getTransformFeedbackVaryings(): string[] {\n    if (this._getTransformFeedbackVaryings) {\n      return this._getTransformFeedbackVaryings();\n    }\n    return [];\n  }\n}\n\n/**\n * Helper function to create a custom effect from external shader files\n */\nexport async function createCustomEffectFromFiles(\n  name: string,\n  vertexShaderUrl: string,\n  fragmentShaderUrl: string,\n  options?: Partial<CustomEffectOptions>,\n): Promise<CustomEffect> {\n  const [vertexShader, fragmentShader] = await Promise.all([\n    fetch(vertexShaderUrl).then((r) => r.text()),\n    fetch(fragmentShaderUrl).then((r) => r.text()),\n  ]);\n\n  return new CustomEffect({\n    name,\n    vertexShader,\n    fragmentShader,\n    ...options,\n  });\n}\n\n/**\n * Helper function to create a custom effect from shader strings\n */\nexport function createCustomEffect(\n  name: string,\n  vertexShader: string | undefined,\n  fragmentShader: string,\n  options?: Partial<CustomEffectOptions>,\n): CustomEffect {\n  // Use default vertex shader if not provided\n  const defaultVertexShader = `\n    attribute vec2 aPosition;\n    attribute vec2 aTexCoord;\n    \n    varying vec2 vTexCoord;\n    \n    void main() {\n      gl_Position = vec4(aPosition, 0.0, 1.0);\n      vTexCoord = aTexCoord;\n    }\n  `;\n\n  return new CustomEffect({\n    name,\n    vertexShader: vertexShader || defaultVertexShader,\n    fragmentShader,\n    ...options,\n  });\n}\n","// Re-export all effects\nexport { BaseEffect } from './BaseEffect';\nexport { createFragmentShader, commonShaderFunctions } from './shaderUtils';\n\n// Effect classes\nexport { FadeEffect } from './fade';\nexport { SlideEffect, type SlideDirection } from './slide';\nexport { FlipEffect, type FlipAxis } from './flip';\nexport { WaveEffect, type WaveOptions } from './wave';\nexport { DistortionEffect, type DistortionOptions } from './distortion';\nexport { DissolveEffect, type DissolveOptions } from './dissolve';\nexport { CircleEffect, type CircleOptions } from './circle';\nexport { PixelDissolveEffect, type PixelDissolveOptions } from './pixelDissolve';\nexport { MorphEffect, type MorphOptions } from './morph';\nexport { GlitchEffect, type GlitchOptions } from './glitch';\nexport {\n  CustomEffect,\n  createCustomEffect,\n  createCustomEffectFromFiles,\n  type CustomEffectOptions,\n} from './CustomEffect';\n\n// Import classes for creating instances\nimport { FadeEffect } from './fade';\nimport { SlideEffect } from './slide';\nimport { FlipEffect } from './flip';\nimport { WaveEffect } from './wave';\nimport { DistortionEffect } from './distortion';\nimport { DissolveEffect } from './dissolve';\nimport { CircleEffect } from './circle';\nimport { PixelDissolveEffect } from './pixelDissolve';\nimport { MorphEffect } from './morph';\nimport { GlitchEffect } from './glitch';\n\n// Create and export singleton instances\nexport const fadeEffect = new FadeEffect();\nexport const slideLeftEffect = new SlideEffect('left');\nexport const slideRightEffect = new SlideEffect('right');\nexport const slideUpEffect = new SlideEffect('up');\nexport const slideDownEffect = new SlideEffect('down');\nexport const flipHorizontalEffect = new FlipEffect('horizontal');\nexport const flipVerticalEffect = new FlipEffect('vertical');\nexport const waveEffect = new WaveEffect();\nexport const gentleWaveEffect = new WaveEffect({ amplitude: 0.05, frequency: 5.0, speed: 0.5 });\nexport const intenseWaveEffect = new WaveEffect({ amplitude: 0.2, frequency: 15.0, speed: 2.0 });\nexport const distortionEffect = new DistortionEffect();\nexport const subtleDistortionEffect = new DistortionEffect({\n  intensity: 0.3,\n  radius: 0.6,\n  spiral: 1.0,\n});\nexport const extremeDistortionEffect = new DistortionEffect({\n  intensity: 1.0,\n  radius: 1.0,\n  spiral: 4.0,\n});\nexport const dissolveEffect = new DissolveEffect();\nexport const smoothDissolveEffect = new DissolveEffect({\n  scale: 5.0,\n  threshold: 0.5,\n  fadeWidth: 0.2,\n});\nexport const pixelDissolveEffect = new PixelDissolveEffect();\nexport const largePixelDissolveEffect = new PixelDissolveEffect({\n  pixelSize: 40.0,\n  stagger: 0.2,\n});\nexport const smallPixelDissolveEffect = new PixelDissolveEffect({\n  pixelSize: 10.0,\n  stagger: 0.4,\n});\nexport const circleEffect = new CircleEffect();\nexport const circleFromCenterEffect = new CircleEffect({\n  centerX: 0.5,\n  centerY: 0.5,\n  feather: 0.05,\n  scale: 1.2,\n});\nexport const circleFromCornerEffect = new CircleEffect({\n  centerX: 0.0,\n  centerY: 0.0,\n  feather: 0.1,\n  scale: 1.5,\n});\nexport const morphEffect = new MorphEffect();\nexport const intenseMorphEffect = new MorphEffect({\n  gridSize: 100.0,\n  morphIntensity: 0.5,\n  twistAmount: 4.0,\n  waveFrequency: 5.0,\n});\nexport const glitchEffect = new GlitchEffect();\nexport const intenseGlitchEffect = new GlitchEffect({\n  intensity: 0.8,\n  sliceCount: 25.0,\n  colorShift: 0.05,\n  noiseAmount: 0.2,\n});\nexport const subtleGlitchEffect = new GlitchEffect({\n  intensity: 0.3,\n  sliceCount: 10.0,\n  colorShift: 0.02,\n  noiseAmount: 0.05,\n});\n\n// Set unique names for effect variants\ngentleWaveEffect.name = 'gentleWave';\nintenseWaveEffect.name = 'intenseWave';\nsubtleDistortionEffect.name = 'subtleDistortion';\nextremeDistortionEffect.name = 'extremeDistortion';\npixelDissolveEffect.name = 'pixelDissolve';\nsmoothDissolveEffect.name = 'smoothDissolve';\ncircleFromCenterEffect.name = 'circleFromCenter';\ncircleFromCornerEffect.name = 'circleFromCorner';\nlargePixelDissolveEffect.name = 'largePixelDissolve';\nsmallPixelDissolveEffect.name = 'smallPixelDissolve';\nintenseMorphEffect.name = 'intenseMorph';\nintenseGlitchEffect.name = 'intenseGlitch';\nsubtleGlitchEffect.name = 'subtleGlitch';\n\n// Collection of all default effects\nexport function getDefaultEffects() {\n  return [\n    fadeEffect,\n    slideLeftEffect,\n    slideRightEffect,\n    slideUpEffect,\n    slideDownEffect,\n    flipHorizontalEffect,\n    flipVerticalEffect,\n    waveEffect,\n    gentleWaveEffect,\n    intenseWaveEffect,\n    distortionEffect,\n    subtleDistortionEffect,\n    extremeDistortionEffect,\n    dissolveEffect,\n    pixelDissolveEffect,\n    largePixelDissolveEffect,\n    smallPixelDissolveEffect,\n    smoothDissolveEffect,\n    circleEffect,\n    circleFromCenterEffect,\n    circleFromCornerEffect,\n    morphEffect,\n    intenseMorphEffect,\n    glitchEffect,\n    intenseGlitchEffect,\n    subtleGlitchEffect,\n  ];\n}\n\nimport type { EffectManager } from '../core/EffectManager';\n\n// Helper to register all default effects\nexport function registerDefaultEffects(manager: EffectManager): void {\n  getDefaultEffects().forEach((effect) => manager.register(effect));\n}\n","import { EventEmitter } from './EventEmitter';\nimport { StateManager } from './StateManager';\nimport { ImageLoader, LoadedImage } from './ImageLoader';\nimport { WebGLRenderer } from './WebGLRenderer';\nimport { WebGL2Renderer } from './WebGL2Renderer';\nimport { Canvas2DFallback } from './Canvas2DFallback';\nimport { EffectManager, IEffect } from './EffectManager';\nimport { registerDefaultEffects } from '../effects';\n\nexport interface CarouselCoreOptions {\n  canvas: HTMLCanvasElement;\n  images: string[];\n  effect?: string;\n  autoplay?: boolean;\n  autoplayInterval?: number;\n  transitionDuration?: number;\n  loop?: boolean;\n  fallbackToCanvas?: boolean;\n  onTransitionStart?: (from: number, to: number) => void;\n  onTransitionEnd?: (current: number) => void;\n}\n\nexport interface CarouselCoreEvents extends Record<string, unknown[]> {\n  ready: [];\n  error: [Error];\n  imageLoaded: [number, LoadedImage];\n  allImagesLoaded: [LoadedImage[]];\n  transitionStart: [number, number];\n  transitionEnd: [number];\n  play: [];\n  pause: [];\n}\n\nexport class CarouselCore extends EventEmitter<CarouselCoreEvents> {\n  private stateManager: StateManager;\n  private imageLoader: ImageLoader;\n  private renderer: WebGLRenderer | WebGL2Renderer | Canvas2DFallback | null = null;\n  private effectManager: EffectManager;\n  private canvas: HTMLCanvasElement;\n  private options: CarouselCoreOptions;\n  private loadedImages: Map<string, LoadedImage> = new Map();\n  private textures: Map<string, WebGLTexture> = new Map();\n  private animationId: number | null = null;\n  private transitionStartTime: number | null = null;\n  private autoplayTimer: NodeJS.Timeout | null = null;\n  private isWebGL = false;\n  private validImageIndices: number[] = []; // Track which image indices loaded successfully\n\n  constructor(options: CarouselCoreOptions) {\n    super();\n    this.options = options;\n    this.canvas = options.canvas;\n\n    // Initialize components\n    this.stateManager = new StateManager({\n      images: options.images,\n      currentIndex: 0,\n      effect: options.effect || 'fade',\n      autoplayInterval: options.autoplayInterval || 3000,\n      transitionDuration: options.transitionDuration || 1000,\n      loop: options.loop !== false,\n      isPlaying: options.autoplay || false,\n    });\n\n    this.imageLoader = new ImageLoader({\n      crossOrigin: 'anonymous', // Enable CORS for images\n    });\n    this.effectManager = new EffectManager();\n\n    // Register default effects\n    registerDefaultEffects(this.effectManager);\n\n    // Setup state event listeners\n    this.setupStateListeners();\n\n    // Setup callbacks\n    if (options.onTransitionStart) {\n      this.on('transitionStart', options.onTransitionStart);\n    }\n    if (options.onTransitionEnd) {\n      this.on('transitionEnd', options.onTransitionEnd);\n    }\n  }\n\n  async initialize(): Promise<void> {\n    try {\n      // Initialize renderer\n      if (!this.initializeRenderer()) {\n        throw new Error('Failed to initialize renderer');\n      }\n\n      // Preload images\n      await this.preloadImages();\n\n      // Start autoplay if enabled\n      if (this.stateManager.get('isPlaying')) {\n        this.startAutoplay();\n      }\n\n      this.emit('ready');\n    } catch (error) {\n      this.emit('error', error as Error);\n      throw error;\n    }\n  }\n\n  private initializeRenderer(): boolean {\n    // Try WebGL 2.0 first (it's backwards compatible and supports more features)\n    if (this.options.fallbackToCanvas !== false) {\n      const webgl2Renderer = new WebGL2Renderer();\n      if (webgl2Renderer.initialize(this.canvas)) {\n        this.renderer = webgl2Renderer;\n        this.isWebGL = true;\n\n        // Setup WebGL 2.0 event listeners\n        webgl2Renderer.on('error', (error) => this.emit('error', error));\n        webgl2Renderer.on('contextLost', () => this.handleContextLost());\n        webgl2Renderer.on('contextRestored', () => this.handleContextRestored());\n\n        return true;\n      }\n      webgl2Renderer.dispose();\n    }\n\n    // Try WebGL 1.0 if WebGL 2.0 is not available\n    if (this.options.fallbackToCanvas !== false) {\n      const webglRenderer = new WebGLRenderer();\n      if (webglRenderer.initialize(this.canvas)) {\n        this.renderer = webglRenderer;\n        this.isWebGL = true;\n\n        // Setup WebGL event listeners\n        webglRenderer.on('error', (error) => this.emit('error', error));\n        webglRenderer.on('contextLost', () => this.handleContextLost());\n        webglRenderer.on('contextRestored', () => this.handleContextRestored());\n\n        return true;\n      }\n      webglRenderer.dispose();\n    }\n\n    // Fallback to Canvas2D\n    const canvas2DFallback = new Canvas2DFallback();\n    if (canvas2DFallback.initialize(this.canvas)) {\n      this.renderer = canvas2DFallback;\n      this.isWebGL = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  private setupStateListeners(): void {\n    this.stateManager.on('transitionStart', (from, to) => {\n      this.emit('transitionStart', from, to);\n      this.startTransition(from, to);\n    });\n\n    this.stateManager.on('transitionEnd', (index) => {\n      this.emit('transitionEnd', index);\n    });\n\n    this.stateManager.on('playStateChange', (isPlaying) => {\n      if (isPlaying) {\n        this.emit('play');\n        this.startAutoplay();\n      } else {\n        this.emit('pause');\n        this.stopAutoplay();\n      }\n    });\n\n    this.stateManager.on('indexChange', (oldIndex, newIndex) => {\n      this.emit('imageChange', newIndex);\n    });\n  }\n\n  private async preloadImages(): Promise<void> {\n    const images = this.stateManager.get('images');\n\n    const loadedImages = await this.imageLoader.preloadWithProgress(images, (loaded, _total) => {\n      if (loaded === 1 && this.loadedImages.size === 0) {\n        // First image loaded, can start rendering\n        const startIndex = this.stateManager.get('currentIndex');\n        const imageUrl = images[startIndex];\n        if (imageUrl) {\n          const initialImage = this.imageLoader.getFromCache(imageUrl);\n          if (initialImage) {\n            this.loadedImages.set(imageUrl, initialImage);\n            this.emit('imageLoaded', startIndex, initialImage);\n            this.prepareInitialRender(initialImage, startIndex);\n          }\n        }\n      }\n    });\n\n    // Store all loaded images\n    loadedImages.forEach((image, index) => {\n      this.loadedImages.set(images[index]!, image);\n      this.emit('imageLoaded', index, image);\n\n      // Create WebGL texture if using WebGL\n      if (\n        this.isWebGL &&\n        (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer)\n      ) {\n        const texture = this.renderer.loadTexture(image.element);\n        if (texture) {\n          this.textures.set(images[index]!, texture);\n        }\n      }\n    });\n\n    this.emit('allImagesLoaded', loadedImages);\n  }\n\n  private prepareInitialRender(image: LoadedImage, imageIndex?: number): void {\n    if (\n      this.isWebGL &&\n      (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer)\n    ) {\n      const images = this.stateManager.get('images');\n      const index = imageIndex ?? this.stateManager.get('currentIndex');\n      const imageSrc = images[index]!;\n      \n      // Ensure the renderer has the image element to get size info\n      \n      // Load texture (this will also cache the image size)\n      let texture = this.renderer.loadTexture(image.element);\n      if (texture) {\n        this.textures.set(imageSrc, texture);\n      }\n\n      if (texture) {\n        // Get current effect and its uniforms\n        const effectName = this.stateManager.get('effect');\n        const effect = this.effectManager.get(effectName);\n        const uniforms = effect ? effect.getUniforms(0) : {};\n\n        \n        // Set the effect to renderer before initial render\n        if (effect) {\n          this.renderer.setEffect({\n            vertexShader: effect.vertexShader,\n            fragmentShader: effect.fragmentShader,\n          });\n        }\n        \n        // For initial render, pass the same image as both textures\n        this.renderer.render(texture, texture, 0, uniforms, imageSrc, imageSrc);\n      }\n    } else if (this.renderer instanceof Canvas2DFallback) {\n      this.renderer.setImages(image.element, null);\n      this.renderer.render(0);\n    }\n  }\n\n  private startTransition(from: number, to: number): void {\n    const images = this.stateManager.get('images');\n    const fromImage = this.loadedImages.get(images[from]!);\n    const toImage = this.loadedImages.get(images[to]!);\n\n    if (!fromImage || !toImage) {\n      // Images not loaded yet, skip transition\n      this.stateManager.endTransition(to);\n      return;\n    }\n\n    this.transitionStartTime = performance.now();\n\n    if (\n      this.isWebGL &&\n      (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer)\n    ) {\n      const fromTexture = this.textures.get(images[from]!);\n      const toTexture = this.textures.get(images[to]!);\n\n      if (fromTexture && toTexture) {\n        // Set effect if needed\n        const effectName = this.stateManager.get('effect');\n        let effect = this.effectManager.get(effectName);\n\n        // If TrianglePeelV2, check if it's going to work\n        if (effectName === 'trianglePeelV2' && effect) {\n          try {\n            // Check if effect requires custom mesh (WebGL 2.0)\n            if (this.renderer instanceof WebGL2Renderer && effect.requiresCustomMesh) {\n              const mesh = effect.getMesh?.();\n              if (!mesh || !mesh.positions || !mesh.indices) {\n                console.error(\n                  '[CarouselCore.startTransition] TrianglePeelV2 mesh is invalid, falling back to fade',\n                );\n                effect = this.effectManager.get('fade');\n                this.stateManager.set('effect', 'fade');\n              } else {\n                this.renderer.setMesh({\n                  vertices: mesh.positions,\n                  indices: mesh.indices,\n                  texCoords: mesh.texCoords,\n                  normals: mesh.normals,\n                  instanceData: effect.getInstanceData?.()?.positions || undefined,\n                });\n              }\n            }\n          } catch (error) {\n            console.error('[CarouselCore.startTransition] Error setting up TrianglePeelV2:', error);\n            effect = this.effectManager.get('fade');\n            this.stateManager.set('effect', 'fade');\n          }\n        }\n\n        if (effect) {\n          this.renderer.setEffect({\n            vertexShader: effect.vertexShader,\n            fragmentShader: effect.fragmentShader,\n          });\n        }\n\n        this.animateTransition(fromTexture, toTexture, to);\n      } else {\n        console.error('[CarouselCore.startTransition] Missing texture:', {\n          fromTexture: !!fromTexture,\n          toTexture: !!toTexture,\n        });\n      }\n    } else if (this.renderer instanceof Canvas2DFallback) {\n      this.renderer.setImages(fromImage.element, toImage.element);\n      this.animateTransition(null, null, to);\n    }\n  }\n\n  private animateTransition(\n    fromTexture: WebGLTexture | null,\n    toTexture: WebGLTexture | null,\n    toIndex: number,\n  ): void {\n    const animate = () => {\n      if (!this.transitionStartTime) {\n        return;\n      }\n\n      const elapsed = performance.now() - this.transitionStartTime;\n      const duration = this.stateManager.get('transitionDuration');\n      const progress = Math.min(elapsed / duration, 1);\n\n      try {\n        if (\n          this.isWebGL &&\n          (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer) &&\n          fromTexture &&\n          toTexture\n        ) {\n          const effect = this.effectManager.get(this.stateManager.get('effect'));\n          const uniforms = effect ? effect.getUniforms(progress) : {};\n          const images = this.stateManager.get('images');\n          const currentIndex = this.stateManager.get('currentIndex');\n          const fromSrc = images[currentIndex];\n          const toSrc = images[toIndex];\n\n          if (this.renderer instanceof WebGL2Renderer && effect?.getInstanceData) {\n            const instanceData = effect.getInstanceData();\n            const instanceCount = instanceData?.positions\n              ? instanceData.positions.length / 12\n              : undefined;\n            // Only use instanced rendering if we actually have instance data\n            if (instanceCount && instanceCount > 0) {\n              this.renderer.render(\n                fromTexture,\n                toTexture,\n                progress,\n                uniforms,\n                fromSrc,\n                toSrc,\n                instanceCount,\n              );\n            } else {\n              this.renderer.render(fromTexture, toTexture, progress, uniforms, fromSrc, toSrc);\n            }\n          } else {\n            this.renderer.render(fromTexture, toTexture, progress, uniforms, fromSrc, toSrc);\n          }\n        } else if (this.renderer instanceof Canvas2DFallback) {\n          this.renderer.render(progress);\n        }\n      } catch (error) {\n        console.error('[CarouselCore.animate] Error during render:', error);\n        // End transition on error\n        this.animationId = null;\n        this.transitionStartTime = null;\n        this.stateManager.endTransition(toIndex);\n        return;\n      }\n\n      if (progress < 1) {\n        this.animationId = requestAnimationFrame(animate);\n      } else {\n        this.animationId = null;\n        this.transitionStartTime = null;\n        this.stateManager.endTransition(toIndex);\n\n        // Schedule next transition if autoplay\n        if (this.stateManager.get('isPlaying')) {\n          this.scheduleNextTransition();\n        }\n      }\n    };\n\n    animate();\n  }\n\n  private handleContextLost(): void {\n    // Cancel any ongoing animation\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n\n    // Clear textures\n    this.textures.clear();\n  }\n\n  private handleContextRestored(): void {\n    // Recreate textures\n    if (\n      this.isWebGL &&\n      (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer)\n    ) {\n      for (const [url, image] of this.loadedImages) {\n        const texture = this.renderer.loadTexture(image.element);\n        if (texture) {\n          this.textures.set(url, texture);\n        }\n      }\n    }\n\n    // Redraw current image\n    const currentIndex = this.stateManager.get('currentIndex');\n    const images = this.stateManager.get('images');\n    const currentImage = this.loadedImages.get(images[currentIndex]!);\n\n    if (currentImage) {\n      this.prepareInitialRender(currentImage);\n    }\n  }\n\n  private startAutoplay(): void {\n    this.stopAutoplay();\n    this.scheduleNextTransition();\n  }\n\n  private stopAutoplay(): void {\n    if (this.autoplayTimer) {\n      clearTimeout(this.autoplayTimer);\n      this.autoplayTimer = null;\n    }\n  }\n\n  private scheduleNextTransition(): void {\n    if (!this.stateManager.get('isPlaying')) return;\n\n    // Clear any existing timer to prevent duplicates\n    this.stopAutoplay();\n\n    const interval = this.stateManager.get('autoplayInterval');\n    this.autoplayTimer = setTimeout(() => {\n      if (this.stateManager.get('isPlaying') && !this.stateManager.get('isTransitioning')) {\n        this.next();\n      }\n    }, interval);\n  }\n\n  // Public API\n  next(): void {\n    if (!this.stateManager.get('isTransitioning') && this.stateManager.canGoNext()) {\n      const nextIndex = this.stateManager.getNextIndex();\n      this.stateManager.startTransition(nextIndex);\n    }\n  }\n\n  previous(): void {\n    if (!this.stateManager.get('isTransitioning') && this.stateManager.canGoPrevious()) {\n      const prevIndex = this.stateManager.getPreviousIndex();\n      this.stateManager.startTransition(prevIndex);\n    }\n  }\n\n  goTo(index: number): void {\n    const images = this.stateManager.get('images');\n    if (\n      index >= 0 &&\n      index < images.length &&\n      index !== this.stateManager.get('currentIndex') &&\n      !this.stateManager.get('isTransitioning')\n    ) {\n      this.stateManager.startTransition(index);\n    }\n  }\n\n  play(): void {\n    this.stateManager.set('isPlaying', true);\n  }\n\n  pause(): void {\n    this.stateManager.set('isPlaying', false);\n  }\n\n  setAutoplay(enabled: boolean, interval?: number): void {\n    if (interval !== undefined) {\n      this.stateManager.set('autoplayInterval', interval);\n    }\n    this.stateManager.set('isPlaying', enabled);\n  }\n\n  setTransitionDuration(duration: number): void {\n    this.stateManager.set('transitionDuration', duration);\n  }\n\n  setEffect(effectName: string): boolean {\n    if (this.effectManager.has(effectName)) {\n      const effect = this.effectManager.get(effectName);\n\n      // Check if effect requires WebGL 2.0\n      if (effect && effect.requiresWebGL2) {\n        if (!(this.renderer instanceof WebGL2Renderer)) {\n          console.warn(\n            `Effect \"${effectName}\" requires WebGL 2.0, but current renderer is ${this.renderer?.constructor.name}. Falling back to fade effect.`,\n          );\n          // Fallback to fade effect\n          return this.setEffect('fade');\n        }\n      }\n\n      this.stateManager.set('effect', effectName);\n\n      // Update renderer with new effect\n      if (\n        this.isWebGL &&\n        (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer) &&\n        effect\n      ) {\n        this.renderer.setEffect({\n          vertexShader: effect.vertexShader,\n          fragmentShader: effect.fragmentShader,\n        });\n\n        // Re-render current image with new effect\n        const currentIndex = this.stateManager.get('currentIndex');\n        const images = this.stateManager.get('images');\n        const currentImageSrc = images[currentIndex];\n\n        if (currentImageSrc) {\n          const texture = this.textures.get(currentImageSrc);\n          if (texture) {\n            this.renderer.render(texture, null, 0, effect.getUniforms(0), currentImageSrc);\n          }\n        }\n      }\n\n      return true;\n    }\n    return false;\n  }\n\n  registerEffect(effect: IEffect): void {\n    this.effectManager.register(effect);\n  }\n\n  getCurrentIndex(): number {\n    return this.stateManager.get('currentIndex');\n  }\n\n  getImages(): LoadedImage[] {\n    const urls = this.stateManager.get('images');\n    return urls\n      .map((url) => this.loadedImages.get(url))\n      .filter((img): img is LoadedImage => img !== undefined);\n  }\n\n  resize(width?: number, height?: number): void {\n    if (!this.renderer) return;\n\n    // Use provided dimensions or get from canvas\n    const actualWidth = width ?? this.canvas.width;\n    const actualHeight = height ?? this.canvas.height;\n\n    this.renderer.resize(actualWidth, actualHeight);\n\n    // Redraw current state\n    const currentIndex = this.stateManager.get('currentIndex');\n    const images = this.stateManager.get('images');\n    const currentImageSrc = images[currentIndex];\n\n    if (!currentImageSrc) return;\n\n    const currentImage = this.loadedImages.get(currentImageSrc);\n    if (!currentImage) return;\n\n    // If transitioning, let the animation loop handle it\n    if (this.stateManager.get('isTransitioning')) {\n      return;\n    }\n\n    // Redraw the current image\n    if (\n      this.isWebGL &&\n      (this.renderer instanceof WebGLRenderer || this.renderer instanceof WebGL2Renderer)\n    ) {\n      const texture = this.textures.get(currentImageSrc);\n      if (texture) {\n        // Get current effect and its uniforms\n        const effectName = this.stateManager.get('effect');\n        const effect = this.effectManager.get(effectName);\n        const uniforms = effect ? effect.getUniforms(0) : {};\n\n        this.renderer.render(texture, null, 0, uniforms, currentImageSrc);\n      }\n    } else if (this.renderer instanceof Canvas2DFallback) {\n      this.renderer.setImages(currentImage.element, null);\n      this.renderer.render(0);\n    }\n  }\n\n  dispose(): void {\n    // Stop animations\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n\n    // Stop autoplay\n    this.stopAutoplay();\n\n    // Clean up renderer\n    if (this.renderer) {\n      this.renderer.dispose();\n      this.renderer = null;\n    }\n\n    // Clear caches\n    this.imageLoader.clearCache();\n    this.loadedImages.clear();\n    this.textures.clear();\n\n    // Remove all listeners\n    this.removeAllListeners();\n    this.stateManager.removeAllListeners();\n  }\n\n  isReady(): boolean {\n    return this.renderer !== null && this.loadedImages.size > 0;\n  }\n\n  isUsingWebGL(): boolean {\n    return this.isWebGL;\n  }\n}\n","import { CarouselCore } from './core/CarouselCore';\nimport { EventEmitter } from './core/EventEmitter';\nimport type { IEffect } from './core/EffectManager';\n\nimport type { WebGLCarouselOptions, WebGLCarouselEvents } from './types';\n\nexport type { WebGLCarouselOptions, WebGLCarouselEvents };\n\nexport class WebGLCarousel extends EventEmitter<WebGLCarouselEvents> {\n  private core: CarouselCore;\n  private container: HTMLElement;\n  private canvas: HTMLCanvasElement;\n  private options: Required<WebGLCarouselOptions>;\n  private isInitialized = false;\n  private images: string[];\n\n  constructor(options: WebGLCarouselOptions) {\n    super();\n\n    // Validate and set options\n    this.options = this.validateOptions(options);\n    this.images = this.options.images;\n\n    // Get container element\n    this.container = this.getContainer(this.options.container);\n\n    // Create canvas\n    this.canvas = this.createCanvas();\n\n    // Initialize core\n    this.core = this.createCore();\n\n    // Initialize\n    void this.initialize();\n  }\n\n  private validateOptions(options: WebGLCarouselOptions): Required<WebGLCarouselOptions> {\n    if (!options.container) {\n      throw new Error('Container is required');\n    }\n\n    if (!options.images || options.images.length === 0) {\n      throw new Error('At least one image is required');\n    }\n\n    return {\n      container: options.container,\n      images: options.images,\n      effect: options.effect || 'fade',\n      effects: options.effects || [],\n      autoplay: options.autoplay ?? false,\n      autoplayInterval: options.autoplayInterval ?? 3000,\n      navigation: options.navigation ?? true,\n      pagination: options.pagination ?? true,\n      loop: options.loop ?? true,\n      preload: options.preload ?? true,\n      fallbackToCanvas2D: options.fallbackToCanvas2D ?? true,\n      transitionDuration: options.transitionDuration ?? 1000,\n      startIndex: options.startIndex ?? 0,\n      easing: options.easing || ((t: number) => t),\n      onImageChange: options.onImageChange || (() => {}),\n      onTransitionStart: options.onTransitionStart || (() => {}),\n      onTransitionEnd: options.onTransitionEnd || (() => {}),\n      onError: options.onError || (() => {}),\n    };\n  }\n\n  private getContainer(container: string | HTMLElement): HTMLElement {\n    if (typeof container === 'string') {\n      const element = document.querySelector(container);\n      if (!element) {\n        throw new Error(`Container element not found: ${container}`);\n      }\n      return element as HTMLElement;\n    }\n    return container;\n  }\n\n  private createCanvas(): HTMLCanvasElement {\n    // Ensure container has position for absolute children\n    const containerPosition = window.getComputedStyle(this.container).position;\n    if (containerPosition === 'static') {\n      this.container.style.position = 'relative';\n    }\n\n    const canvas = document.createElement('canvas');\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.display = 'block';\n    this.container.appendChild(canvas);\n\n    return canvas;\n  }\n\n  private resizeCanvas(): void {\n    const rect = this.container.getBoundingClientRect();\n    this.canvas.width = rect.width * window.devicePixelRatio;\n    this.canvas.height = rect.height * window.devicePixelRatio;\n    this.canvas.style.width = `${rect.width}px`;\n    this.canvas.style.height = `${rect.height}px`;\n  }\n\n  private createCore(): CarouselCore {\n    // Extract effect name if it's an IEffect object\n    const effectName =\n      typeof this.options.effect === 'string'\n        ? this.options.effect\n        : this.options.effect?.name || 'fade';\n\n    return new CarouselCore({\n      canvas: this.canvas,\n      images: this.options.images,\n      effect: effectName,\n      autoplay: this.options.autoplay,\n      autoplayInterval: this.options.autoplayInterval,\n      transitionDuration: this.options.transitionDuration,\n      loop: this.options.loop,\n      fallbackToCanvas: this.options.fallbackToCanvas2D,\n      // Remove callbacks here to avoid duplicate events\n    });\n  }\n\n  private async initialize(): Promise<void> {\n    try {\n      // Resize canvas before initialization\n      this.resizeCanvas();\n\n      // Set up event listeners\n      this.setupEventListeners();\n\n      // Initialize core\n      await this.core.initialize();\n\n      // Set initial effect\n      if (typeof this.options.effect === 'object') {\n        // Register and use custom effect\n        this.registerEffect(this.options.effect);\n        this.setEffect(this.options.effect.name);\n      } else {\n        this.setEffect(this.options.effect);\n      }\n\n      // Register additional effects if provided\n      if (this.options.effects) {\n        this.options.effects.forEach((effect) => {\n          this.registerEffect(effect);\n        });\n      }\n\n      // Set up autoplay\n      if (this.options.autoplay) {\n        this.core.setAutoplay(true, this.options.autoplayInterval);\n      }\n\n      // Set transition duration\n      this.core.setTransitionDuration(this.options.transitionDuration);\n\n      // Create UI controls\n      if (this.options.navigation) {\n        this.createNavigationControls();\n      }\n\n      if (this.options.pagination) {\n        this.createPaginationControls();\n        // Set initial active state\n        this.updatePagination(this.options.startIndex || 0);\n      }\n\n      // Set initial canvas size\n      this.resizeCanvas();\n\n      // Handle window resize\n      window.addEventListener('resize', this.handleResize);\n\n      this.isInitialized = true;\n      this.emit('ready');\n    } catch (error) {\n      this.handleError(error as Error);\n    }\n  }\n\n  private setupEventListeners(): void {\n    // Forward core events\n    this.core.on('imageChange', (...args: unknown[]) => {\n      const index = args[0] as number;\n      this.emit('imageChange', index);\n      this.options.onImageChange?.(index);\n      this.updatePagination(index);\n    });\n\n    this.core.on('transitionStart', (from: number, to: number) => {\n      this.emit('transitionStart', from, to);\n      this.options.onTransitionStart?.(from, to);\n    });\n\n    this.core.on('transitionEnd', (index: number) => {\n      this.emit('transitionEnd', index);\n      this.options.onTransitionEnd?.(index);\n    });\n\n    this.core.on('error', (error) => {\n      this.handleError(error);\n    });\n\n    this.core.on('ready', () => {});\n  }\n\n  private handleError(error: Error): void {\n    this.emit('error', error);\n    this.options.onError?.(error);\n    console.error('WebGLCarousel error:', error);\n  }\n\n  private handleResize = (): void => {\n    this.resizeCanvas();\n    this.core.resize(this.canvas.width, this.canvas.height);\n  };\n\n  private createNavigationControls(): void {\n    const prevButton = document.createElement('button');\n    prevButton.className = 'webgl-carousel-prev';\n    prevButton.innerHTML = '&lsaquo;';\n    prevButton.setAttribute('aria-label', 'Previous image');\n    prevButton.addEventListener('click', () => this.previous());\n\n    const nextButton = document.createElement('button');\n    nextButton.className = 'webgl-carousel-next';\n    nextButton.innerHTML = '&rsaquo;';\n    nextButton.setAttribute('aria-label', 'Next image');\n    nextButton.addEventListener('click', () => this.next());\n\n    this.container.appendChild(prevButton);\n    this.container.appendChild(nextButton);\n\n    // Add default styles\n    this.addNavigationStyles();\n  }\n\n  private createPaginationControls(): void {\n    const pagination = document.createElement('div');\n    pagination.className = 'webgl-carousel-pagination';\n\n    const imageCount = this.options.images.length;\n    for (let i = 0; i < imageCount; i++) {\n      const dot = document.createElement('button');\n      dot.className = 'webgl-carousel-dot';\n      dot.setAttribute('aria-label', `Go to image ${i + 1}`);\n      dot.addEventListener('click', () => this.goTo(i));\n\n      if (i === 0) {\n        dot.classList.add('active');\n      }\n\n      pagination.appendChild(dot);\n    }\n\n    this.container.appendChild(pagination);\n\n    // Add default styles\n    this.addPaginationStyles();\n  }\n\n  private updatePagination(index: number): void {\n    const dots = this.container.querySelectorAll('.webgl-carousel-dot');\n    dots.forEach((dot, i) => {\n      dot.classList.toggle('active', i === index);\n    });\n  }\n\n  private addNavigationStyles(): void {\n    if (document.getElementById('webgl-carousel-nav-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'webgl-carousel-nav-styles';\n    style.textContent = `\n      .webgl-carousel-prev,\n      .webgl-carousel-next {\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        background: rgba(0, 0, 0, 0.5);\n        color: white;\n        border: none;\n        font-size: 2rem;\n        padding: 0.5rem 1rem;\n        cursor: pointer;\n        transition: background-color 0.3s;\n        z-index: 10;\n      }\n      \n      .webgl-carousel-prev:hover,\n      .webgl-carousel-next:hover {\n        background: rgba(0, 0, 0, 0.7);\n      }\n      \n      .webgl-carousel-prev {\n        left: 1rem;\n      }\n      \n      .webgl-carousel-next {\n        right: 1rem;\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  private addPaginationStyles(): void {\n    if (document.getElementById('webgl-carousel-pagination-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'webgl-carousel-pagination-styles';\n    style.textContent = `\n      .webgl-carousel-pagination {\n        position: absolute;\n        bottom: 1rem;\n        left: 50%;\n        transform: translateX(-50%);\n        display: flex;\n        gap: 0.5rem;\n        z-index: 10;\n      }\n      \n      .webgl-carousel-dot {\n        width: 0.75rem;\n        height: 0.75rem;\n        border-radius: 50%;\n        border: 2px solid white;\n        background: transparent;\n        cursor: pointer;\n        transition: background-color 0.3s;\n      }\n      \n      .webgl-carousel-dot:hover {\n        background: rgba(255, 255, 255, 0.5);\n      }\n      \n      .webgl-carousel-dot.active {\n        background: white;\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  // Public API methods\n\n  next(): void {\n    if (!this.isInitialized) return;\n    this.core.next();\n  }\n\n  previous(): void {\n    if (!this.isInitialized) return;\n    this.core.previous();\n  }\n\n  goTo(index: number): void {\n    if (!this.isInitialized) return;\n    this.core.goTo(index);\n  }\n\n  setEffect(effectName: string): void {\n    if (!this.isInitialized) return;\n\n    const success = this.core.setEffect(effectName);\n    if (success) {\n      this.emit('effectChange', effectName);\n    }\n  }\n\n  getAvailableEffects(): string[] {\n    // Return list of available effects\n    return [\n      'fade',\n      'slideLeft',\n      'slideRight',\n      'slideUp',\n      'slideDown',\n      'flipHorizontal',\n      'flipVertical',\n      'wave',\n      'distortion',\n      'dissolve',\n      'pixelDissolve',\n      'circle',\n      'morph',\n      'glitch',\n      'pageFlip',\n    ];\n  }\n\n  registerEffect(effect: IEffect): void {\n    if (!this.isInitialized) return;\n    this.core.registerEffect(effect);\n  }\n\n  play(): void {\n    if (!this.isInitialized) return;\n    this.core.setAutoplay(true, this.options.autoplayInterval);\n  }\n\n  pause(): void {\n    if (!this.isInitialized) return;\n    this.core.setAutoplay(false);\n  }\n\n  setAutoplay(enabled: boolean, interval?: number): void {\n    if (!this.isInitialized) return;\n    this.core.setAutoplay(enabled, interval);\n  }\n\n  setTransitionDuration(duration: number): void {\n    if (!this.isInitialized) return;\n    this.core.setTransitionDuration(duration);\n  }\n\n  getCurrentIndex(): number {\n    return this.core.getCurrentIndex();\n  }\n\n  getImageCount(): number {\n    // Return the actual number of successfully loaded images\n    return this.images.length;\n  }\n\n  destroy(): void {\n    if (!this.isInitialized) return;\n\n    // Remove event listener\n    window.removeEventListener('resize', this.handleResize);\n\n    // Destroy core\n    this.core.dispose();\n\n    // Remove canvas\n    if (this.canvas && this.canvas.parentNode) {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n\n    // Remove controls\n    const controls = this.container.querySelectorAll(\n      '.webgl-carousel-prev, .webgl-carousel-next, .webgl-carousel-pagination',\n    );\n    controls.forEach((control) => control.remove());\n\n    // Clear container styles if needed\n    this.container.style.position = '';\n\n    this.isInitialized = false;\n    this.removeAllListeners();\n  }\n\n  isReady(): boolean {\n    return this.isInitialized;\n  }\n\n  isUsingWebGL(): boolean {\n    return this.core.isUsingWebGL();\n  }\n\n  updateImages(images: string[]): void {\n    if (!this.isInitialized) return;\n    this.options.images = images;\n    // Note: This would need to be implemented in CarouselCore\n    // For now, this is a placeholder\n  }\n\n  getImages(): string[] {\n    return this.options.images;\n  }\n}\n","// UMD build entry point - exports everything to global WebGLCarousel namespace\nimport { WebGLCarousel } from './WebGLCarousel';\nimport type { WebGLCarouselOptions } from './WebGLCarousel';\nimport { createCustomEffect, createCustomEffectFromFiles } from './effects';\n\n// Extend WebGLCarousel with static methods\ninterface WebGLCarouselConstructor {\n  new (options: WebGLCarouselOptions): WebGLCarousel;\n  createCustomEffect: typeof createCustomEffect;\n  createCustomEffectFromFiles: typeof createCustomEffectFromFiles;\n}\n\n// Attach commonly used functions to the class for convenience\nconst WebGLCarouselWithMethods = WebGLCarousel as unknown as WebGLCarouselConstructor;\nWebGLCarouselWithMethods.createCustomEffect = createCustomEffect;\nWebGLCarouselWithMethods.createCustomEffectFromFiles = createCustomEffectFromFiles;\n\n// Export the extended class as both default and named export\nexport { WebGLCarouselWithMethods as WebGLCarousel };\nexport default WebGLCarouselWithMethods;\n"],"names":[],"mappings":"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"}